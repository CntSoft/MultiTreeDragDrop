#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EpicDataAccess.Domain.ResourceOptions
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EpicDevNew_20")]
	public partial class EpicResourceOptionDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEconomicIndicator(EconomicIndicator instance);
    partial void UpdateEconomicIndicator(EconomicIndicator instance);
    partial void DeleteEconomicIndicator(EconomicIndicator instance);
    partial void InsertFuelType(FuelType instance);
    partial void UpdateFuelType(FuelType instance);
    partial void DeleteFuelType(FuelType instance);
    partial void InsertTechnicalIndicatorType(TechnicalIndicatorType instance);
    partial void UpdateTechnicalIndicatorType(TechnicalIndicatorType instance);
    partial void DeleteTechnicalIndicatorType(TechnicalIndicatorType instance);
    partial void InsertEconomicIndicatorType(EconomicIndicatorType instance);
    partial void UpdateEconomicIndicatorType(EconomicIndicatorType instance);
    partial void DeleteEconomicIndicatorType(EconomicIndicatorType instance);
    partial void InsertGasPrice(GasPrice instance);
    partial void UpdateGasPrice(GasPrice instance);
    partial void DeleteGasPrice(GasPrice instance);
    partial void InsertLinkGasPriceDiscountRate(LinkGasPriceDiscountRate instance);
    partial void UpdateLinkGasPriceDiscountRate(LinkGasPriceDiscountRate instance);
    partial void DeleteLinkGasPriceDiscountRate(LinkGasPriceDiscountRate instance);
    partial void InsertDataSource(DataSource instance);
    partial void UpdateDataSource(DataSource instance);
    partial void DeleteDataSource(DataSource instance);
    partial void InsertElectricalGroup(ElectricalGroup instance);
    partial void UpdateElectricalGroup(ElectricalGroup instance);
    partial void DeleteElectricalGroup(ElectricalGroup instance);
    partial void InsertResourceBundleAttribute(ResourceBundleAttribute instance);
    partial void UpdateResourceBundleAttribute(ResourceBundleAttribute instance);
    partial void DeleteResourceBundleAttribute(ResourceBundleAttribute instance);
    partial void InsertBcStatsIndicatorType(BcStatsIndicatorType instance);
    partial void UpdateBcStatsIndicatorType(BcStatsIndicatorType instance);
    partial void DeleteBcStatsIndicatorType(BcStatsIndicatorType instance);
    partial void InsertBcStatsIndicatorModel(BcStatsIndicatorModel instance);
    partial void UpdateBcStatsIndicatorModel(BcStatsIndicatorModel instance);
    partial void DeleteBcStatsIndicatorModel(BcStatsIndicatorModel instance);
    partial void InsertBcStatsIndicator(BcStatsIndicator instance);
    partial void UpdateBcStatsIndicator(BcStatsIndicator instance);
    partial void DeleteBcStatsIndicator(BcStatsIndicator instance);
    partial void InsertFinancialIndicatorType(FinancialIndicatorType instance);
    partial void UpdateFinancialIndicatorType(FinancialIndicatorType instance);
    partial void DeleteFinancialIndicatorType(FinancialIndicatorType instance);
    partial void InsertFinancialIndicatorScenario(FinancialIndicatorScenario instance);
    partial void UpdateFinancialIndicatorScenario(FinancialIndicatorScenario instance);
    partial void DeleteFinancialIndicatorScenario(FinancialIndicatorScenario instance);
    partial void InsertLinkFinIndicatorDiscountRate(LinkFinIndicatorDiscountRate instance);
    partial void UpdateLinkFinIndicatorDiscountRate(LinkFinIndicatorDiscountRate instance);
    partial void DeleteLinkFinIndicatorDiscountRate(LinkFinIndicatorDiscountRate instance);
    partial void InsertDiscountRate(DiscountRate instance);
    partial void UpdateDiscountRate(DiscountRate instance);
    partial void DeleteDiscountRate(DiscountRate instance);
    partial void InsertFinancialIndicator(FinancialIndicator instance);
    partial void UpdateFinancialIndicator(FinancialIndicator instance);
    partial void DeleteFinancialIndicator(FinancialIndicator instance);
    partial void InsertEnvironmentalIndicator(EnvironmentalIndicator instance);
    partial void UpdateEnvironmentalIndicator(EnvironmentalIndicator instance);
    partial void DeleteEnvironmentalIndicator(EnvironmentalIndicator instance);
    partial void InsertTechnicalIndicator(TechnicalIndicator instance);
    partial void UpdateTechnicalIndicator(TechnicalIndicator instance);
    partial void DeleteTechnicalIndicator(TechnicalIndicator instance);
    partial void InsertEnvironmentalIndicatorType(EnvironmentalIndicatorType instance);
    partial void UpdateEnvironmentalIndicatorType(EnvironmentalIndicatorType instance);
    partial void DeleteEnvironmentalIndicatorType(EnvironmentalIndicatorType instance);
    partial void InsertEnvironmentalIndicatorScenario(EnvironmentalIndicatorScenario instance);
    partial void UpdateEnvironmentalIndicatorScenario(EnvironmentalIndicatorScenario instance);
    partial void DeleteEnvironmentalIndicatorScenario(EnvironmentalIndicatorScenario instance);
    partial void InsertLinkResourceOptionMapDefinition(LinkResourceOptionMapDefinition instance);
    partial void UpdateLinkResourceOptionMapDefinition(LinkResourceOptionMapDefinition instance);
    partial void DeleteLinkResourceOptionMapDefinition(LinkResourceOptionMapDefinition instance);
    partial void InsertResourceOption(ResourceOption instance);
    partial void UpdateResourceOption(ResourceOption instance);
    partial void DeleteResourceOption(ResourceOption instance);
    partial void InsertResourceOptionAttribute(ResourceOptionAttribute instance);
    partial void UpdateResourceOptionAttribute(ResourceOptionAttribute instance);
    partial void DeleteResourceOptionAttribute(ResourceOptionAttribute instance);
    partial void InsertCostUncertainty(CostUncertainty instance);
    partial void UpdateCostUncertainty(CostUncertainty instance);
    partial void DeleteCostUncertainty(CostUncertainty instance);
    partial void InsertResourceTypeUncertainty(ResourceTypeUncertainty instance);
    partial void UpdateResourceTypeUncertainty(ResourceTypeUncertainty instance);
    partial void DeleteResourceTypeUncertainty(ResourceTypeUncertainty instance);
    #endregion
		
		public EpicResourceOptionDataContext() : 
				base(global::EpicDataAccess.Properties.Settings.Default.EpicDevNew_20ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EpicResourceOptionDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EpicResourceOptionDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EpicResourceOptionDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EpicResourceOptionDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<EconomicIndicator> EconomicIndicators
		{
			get
			{
				return this.GetTable<EconomicIndicator>();
			}
		}
		
		public System.Data.Linq.Table<FuelType> FuelTypes
		{
			get
			{
				return this.GetTable<FuelType>();
			}
		}
		
		public System.Data.Linq.Table<TechnicalIndicatorType> TechnicalIndicatorTypes
		{
			get
			{
				return this.GetTable<TechnicalIndicatorType>();
			}
		}
		
		public System.Data.Linq.Table<EconomicIndicatorType> EconomicIndicatorTypes
		{
			get
			{
				return this.GetTable<EconomicIndicatorType>();
			}
		}
		
		public System.Data.Linq.Table<GasPrice> GasPrices
		{
			get
			{
				return this.GetTable<GasPrice>();
			}
		}
		
		public System.Data.Linq.Table<LinkGasPriceDiscountRate> LinkGasPriceDiscountRates
		{
			get
			{
				return this.GetTable<LinkGasPriceDiscountRate>();
			}
		}
		
		public System.Data.Linq.Table<DataSource> DataSources
		{
			get
			{
				return this.GetTable<DataSource>();
			}
		}
		
		public System.Data.Linq.Table<ElectricalGroup> ElectricalGroups
		{
			get
			{
				return this.GetTable<ElectricalGroup>();
			}
		}
		
		public System.Data.Linq.Table<ResourceBundleAttribute> ResourceBundleAttributes
		{
			get
			{
				return this.GetTable<ResourceBundleAttribute>();
			}
		}
		
		public System.Data.Linq.Table<BcStatsIndicatorType> BcStatsIndicatorTypes
		{
			get
			{
				return this.GetTable<BcStatsIndicatorType>();
			}
		}
		
		public System.Data.Linq.Table<BcStatsIndicatorModel> BcStatsIndicatorModels
		{
			get
			{
				return this.GetTable<BcStatsIndicatorModel>();
			}
		}
		
		public System.Data.Linq.Table<BcStatsIndicator> BcStatsIndicators
		{
			get
			{
				return this.GetTable<BcStatsIndicator>();
			}
		}
		
		public System.Data.Linq.Table<FinancialIndicatorType> FinancialIndicatorTypes
		{
			get
			{
				return this.GetTable<FinancialIndicatorType>();
			}
		}
		
		public System.Data.Linq.Table<FinancialIndicatorScenario> FinancialIndicatorScenarios
		{
			get
			{
				return this.GetTable<FinancialIndicatorScenario>();
			}
		}
		
		public System.Data.Linq.Table<LinkFinIndicatorDiscountRate> LinkFinIndicatorDiscountRates
		{
			get
			{
				return this.GetTable<LinkFinIndicatorDiscountRate>();
			}
		}
		
		public System.Data.Linq.Table<DiscountRate> DiscountRates
		{
			get
			{
				return this.GetTable<DiscountRate>();
			}
		}
		
		public System.Data.Linq.Table<FinancialIndicator> FinancialIndicators
		{
			get
			{
				return this.GetTable<FinancialIndicator>();
			}
		}
		
		public System.Data.Linq.Table<EnvironmentalIndicator> EnvironmentalIndicators
		{
			get
			{
				return this.GetTable<EnvironmentalIndicator>();
			}
		}
		
		public System.Data.Linq.Table<TechnicalIndicator> TechnicalIndicators
		{
			get
			{
				return this.GetTable<TechnicalIndicator>();
			}
		}
		
		public System.Data.Linq.Table<EnvironmentalIndicatorType> EnvironmentalIndicatorTypes
		{
			get
			{
				return this.GetTable<EnvironmentalIndicatorType>();
			}
		}
		
		public System.Data.Linq.Table<EnvironmentalIndicatorScenario> EnvironmentalIndicatorScenarios
		{
			get
			{
				return this.GetTable<EnvironmentalIndicatorScenario>();
			}
		}
		
		public System.Data.Linq.Table<LinkResourceOptionMapDefinition> LinkResourceOptionMapDefinitions
		{
			get
			{
				return this.GetTable<LinkResourceOptionMapDefinition>();
			}
		}
		
		public System.Data.Linq.Table<ResourceOption> ResourceOptions
		{
			get
			{
				return this.GetTable<ResourceOption>();
			}
		}
		
		public System.Data.Linq.Table<ResourceOptionAttribute> ResourceOptionAttributes
		{
			get
			{
				return this.GetTable<ResourceOptionAttribute>();
			}
		}
		
		public System.Data.Linq.Table<CostUncertainty> CostUncertainties
		{
			get
			{
				return this.GetTable<CostUncertainty>();
			}
		}
		
		public System.Data.Linq.Table<ResourceTypeUncertainty> ResourceTypeUncertainties
		{
			get
			{
				return this.GetTable<ResourceTypeUncertainty>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="domain.EconomicIndicators")]
	public partial class EconomicIndicator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EconomicIndicatorTypeId;
		
		private decimal _Measure;
		
		private int _ResourceOptionAttributeId;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private System.Nullable<int> _UserUpdatedId;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private int _EconomicIndicatorScenarioId;
		
		private EntityRef<EconomicIndicatorType> _EconomicIndicatorType;
		
		private EntityRef<ResourceOptionAttribute> _ResourceOptionAttribute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEconomicIndicatorTypeIdChanging(int value);
    partial void OnEconomicIndicatorTypeIdChanged();
    partial void OnMeasureChanging(decimal value);
    partial void OnMeasureChanged();
    partial void OnResourceOptionAttributeIdChanging(int value);
    partial void OnResourceOptionAttributeIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnUserUpdatedIdChanging(System.Nullable<int> value);
    partial void OnUserUpdatedIdChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnEconomicIndicatorScenarioIdChanging(int value);
    partial void OnEconomicIndicatorScenarioIdChanged();
    #endregion
		
		public EconomicIndicator()
		{
			this._EconomicIndicatorType = default(EntityRef<EconomicIndicatorType>);
			this._ResourceOptionAttribute = default(EntityRef<ResourceOptionAttribute>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EconomicIndicatorTypeId", DbType="Int NOT NULL")]
		public int EconomicIndicatorTypeId
		{
			get
			{
				return this._EconomicIndicatorTypeId;
			}
			set
			{
				if ((this._EconomicIndicatorTypeId != value))
				{
					if (this._EconomicIndicatorType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEconomicIndicatorTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EconomicIndicatorTypeId = value;
					this.SendPropertyChanged("EconomicIndicatorTypeId");
					this.OnEconomicIndicatorTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Measure", DbType="Decimal(20,10) NOT NULL")]
		public decimal Measure
		{
			get
			{
				return this._Measure;
			}
			set
			{
				if ((this._Measure != value))
				{
					this.OnMeasureChanging(value);
					this.SendPropertyChanging();
					this._Measure = value;
					this.SendPropertyChanged("Measure");
					this.OnMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceOptionAttributeId", DbType="Int NOT NULL")]
		public int ResourceOptionAttributeId
		{
			get
			{
				return this._ResourceOptionAttributeId;
			}
			set
			{
				if ((this._ResourceOptionAttributeId != value))
				{
					if (this._ResourceOptionAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceOptionAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceOptionAttributeId = value;
					this.SendPropertyChanged("ResourceOptionAttributeId");
					this.OnResourceOptionAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedId", DbType="Int")]
		public System.Nullable<int> UserUpdatedId
		{
			get
			{
				return this._UserUpdatedId;
			}
			set
			{
				if ((this._UserUpdatedId != value))
				{
					this.OnUserUpdatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserUpdatedId = value;
					this.SendPropertyChanged("UserUpdatedId");
					this.OnUserUpdatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EconomicIndicatorScenarioId", DbType="Int NOT NULL")]
		public int EconomicIndicatorScenarioId
		{
			get
			{
				return this._EconomicIndicatorScenarioId;
			}
			set
			{
				if ((this._EconomicIndicatorScenarioId != value))
				{
					this.OnEconomicIndicatorScenarioIdChanging(value);
					this.SendPropertyChanging();
					this._EconomicIndicatorScenarioId = value;
					this.SendPropertyChanged("EconomicIndicatorScenarioId");
					this.OnEconomicIndicatorScenarioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EconomicIndicatorType_EconomicIndicator", Storage="_EconomicIndicatorType", ThisKey="EconomicIndicatorTypeId", OtherKey="Id", IsForeignKey=true)]
		public EconomicIndicatorType EconomicIndicatorType
		{
			get
			{
				return this._EconomicIndicatorType.Entity;
			}
			set
			{
				EconomicIndicatorType previousValue = this._EconomicIndicatorType.Entity;
				if (((previousValue != value) 
							|| (this._EconomicIndicatorType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EconomicIndicatorType.Entity = null;
						previousValue.EconomicIndicators.Remove(this);
					}
					this._EconomicIndicatorType.Entity = value;
					if ((value != null))
					{
						value.EconomicIndicators.Add(this);
						this._EconomicIndicatorTypeId = value.Id;
					}
					else
					{
						this._EconomicIndicatorTypeId = default(int);
					}
					this.SendPropertyChanged("EconomicIndicatorType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResourceOptionAttribute_EconomicIndicator", Storage="_ResourceOptionAttribute", ThisKey="ResourceOptionAttributeId", OtherKey="Id", IsForeignKey=true)]
		public ResourceOptionAttribute ResourceOptionAttribute
		{
			get
			{
				return this._ResourceOptionAttribute.Entity;
			}
			set
			{
				ResourceOptionAttribute previousValue = this._ResourceOptionAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ResourceOptionAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResourceOptionAttribute.Entity = null;
						previousValue.EconomicIndicators.Remove(this);
					}
					this._ResourceOptionAttribute.Entity = value;
					if ((value != null))
					{
						value.EconomicIndicators.Add(this);
						this._ResourceOptionAttributeId = value.Id;
					}
					else
					{
						this._ResourceOptionAttributeId = default(int);
					}
					this.SendPropertyChanged("ResourceOptionAttribute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lookup.FuelTypes")]
	public partial class FuelType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Classification;
		
		private string _FuelClass;
		
		private string _FuelSubType;
		
		private string _Value;
		
		private bool _IsNonIntermittent;
		
		private string _Description;
		
		private int _UserCreatedId;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private System.Nullable<System.DateTime> _DateReplaced;
		
		private System.Nullable<System.DateTime> _DateEffective;
		
		private System.Nullable<int> _OriginalId;
		
		private EntitySet<BcStatsIndicatorModel> _BcStatsIndicatorModels;
		
		private EntitySet<ResourceOption> _ResourceOptions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnClassificationChanging(string value);
    partial void OnClassificationChanged();
    partial void OnFuelClassChanging(string value);
    partial void OnFuelClassChanged();
    partial void OnFuelSubTypeChanging(string value);
    partial void OnFuelSubTypeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnIsNonIntermittentChanging(bool value);
    partial void OnIsNonIntermittentChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnDateReplacedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateReplacedChanged();
    partial void OnDateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEffectiveChanged();
    partial void OnOriginalIdChanging(System.Nullable<int> value);
    partial void OnOriginalIdChanged();
    #endregion
		
		public FuelType()
		{
			this._BcStatsIndicatorModels = new EntitySet<BcStatsIndicatorModel>(new Action<BcStatsIndicatorModel>(this.attach_BcStatsIndicatorModels), new Action<BcStatsIndicatorModel>(this.detach_BcStatsIndicatorModels));
			this._ResourceOptions = new EntitySet<ResourceOption>(new Action<ResourceOption>(this.attach_ResourceOptions), new Action<ResourceOption>(this.detach_ResourceOptions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Classification", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Classification
		{
			get
			{
				return this._Classification;
			}
			set
			{
				if ((this._Classification != value))
				{
					this.OnClassificationChanging(value);
					this.SendPropertyChanging();
					this._Classification = value;
					this.SendPropertyChanged("Classification");
					this.OnClassificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelClass", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FuelClass
		{
			get
			{
				return this._FuelClass;
			}
			set
			{
				if ((this._FuelClass != value))
				{
					this.OnFuelClassChanging(value);
					this.SendPropertyChanging();
					this._FuelClass = value;
					this.SendPropertyChanged("FuelClass");
					this.OnFuelClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelSubType", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string FuelSubType
		{
			get
			{
				return this._FuelSubType;
			}
			set
			{
				if ((this._FuelSubType != value))
				{
					this.OnFuelSubTypeChanging(value);
					this.SendPropertyChanging();
					this._FuelSubType = value;
					this.SendPropertyChanged("FuelSubType");
					this.OnFuelSubTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsNonIntermittent", DbType="Bit NOT NULL")]
		public bool IsNonIntermittent
		{
			get
			{
				return this._IsNonIntermittent;
			}
			set
			{
				if ((this._IsNonIntermittent != value))
				{
					this.OnIsNonIntermittentChanging(value);
					this.SendPropertyChanging();
					this._IsNonIntermittent = value;
					this.SendPropertyChanged("IsNonIntermittent");
					this.OnIsNonIntermittentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReplaced", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateReplaced
		{
			get
			{
				return this._DateReplaced;
			}
			set
			{
				if ((this._DateReplaced != value))
				{
					this.OnDateReplacedChanging(value);
					this.SendPropertyChanging();
					this._DateReplaced = value;
					this.SendPropertyChanged("DateReplaced");
					this.OnDateReplacedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEffective
		{
			get
			{
				return this._DateEffective;
			}
			set
			{
				if ((this._DateEffective != value))
				{
					this.OnDateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._DateEffective = value;
					this.SendPropertyChanged("DateEffective");
					this.OnDateEffectiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalId", DbType="Int")]
		public System.Nullable<int> OriginalId
		{
			get
			{
				return this._OriginalId;
			}
			set
			{
				if ((this._OriginalId != value))
				{
					this.OnOriginalIdChanging(value);
					this.SendPropertyChanging();
					this._OriginalId = value;
					this.SendPropertyChanged("OriginalId");
					this.OnOriginalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FuelType_BcStatsIndicatorModel", Storage="_BcStatsIndicatorModels", ThisKey="Id", OtherKey="FuelTypeId")]
		public EntitySet<BcStatsIndicatorModel> BcStatsIndicatorModels
		{
			get
			{
				return this._BcStatsIndicatorModels;
			}
			set
			{
				this._BcStatsIndicatorModels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FuelType_ResourceOption", Storage="_ResourceOptions", ThisKey="Id", OtherKey="FuelTypeId")]
		public EntitySet<ResourceOption> ResourceOptions
		{
			get
			{
				return this._ResourceOptions;
			}
			set
			{
				this._ResourceOptions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BcStatsIndicatorModels(BcStatsIndicatorModel entity)
		{
			this.SendPropertyChanging();
			entity.FuelType = this;
		}
		
		private void detach_BcStatsIndicatorModels(BcStatsIndicatorModel entity)
		{
			this.SendPropertyChanging();
			entity.FuelType = null;
		}
		
		private void attach_ResourceOptions(ResourceOption entity)
		{
			this.SendPropertyChanging();
			entity.FuelType = this;
		}
		
		private void detach_ResourceOptions(ResourceOption entity)
		{
			this.SendPropertyChanging();
			entity.FuelType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lookup.TechnicalIndicatorTypes")]
	public partial class TechnicalIndicatorType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Abbreviation;
		
		private string _Label;
		
		private string _Description;
		
		private string _UnitOfMeasurement;
		
		private int _Index;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private bool _Readonly;
		
		private string _Subtype;
		
		private System.Nullable<int> _SourceColumn;
		
		private EntitySet<TechnicalIndicator> _TechnicalIndicators;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAbbreviationChanging(string value);
    partial void OnAbbreviationChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUnitOfMeasurementChanging(string value);
    partial void OnUnitOfMeasurementChanged();
    partial void OnIndexChanging(int value);
    partial void OnIndexChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnReadonlyChanging(bool value);
    partial void OnReadonlyChanged();
    partial void OnSubtypeChanging(string value);
    partial void OnSubtypeChanged();
    partial void OnSourceColumnChanging(System.Nullable<int> value);
    partial void OnSourceColumnChanged();
    #endregion
		
		public TechnicalIndicatorType()
		{
			this._TechnicalIndicators = new EntitySet<TechnicalIndicator>(new Action<TechnicalIndicator>(this.attach_TechnicalIndicators), new Action<TechnicalIndicator>(this.detach_TechnicalIndicators));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbreviation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Abbreviation
		{
			get
			{
				return this._Abbreviation;
			}
			set
			{
				if ((this._Abbreviation != value))
				{
					this.OnAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._Abbreviation = value;
					this.SendPropertyChanged("Abbreviation");
					this.OnAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitOfMeasurement", DbType="NVarChar(256)")]
		public string UnitOfMeasurement
		{
			get
			{
				return this._UnitOfMeasurement;
			}
			set
			{
				if ((this._UnitOfMeasurement != value))
				{
					this.OnUnitOfMeasurementChanging(value);
					this.SendPropertyChanging();
					this._UnitOfMeasurement = value;
					this.SendPropertyChanged("UnitOfMeasurement");
					this.OnUnitOfMeasurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Index]", Storage="_Index", DbType="Int NOT NULL")]
		public int Index
		{
			get
			{
				return this._Index;
			}
			set
			{
				if ((this._Index != value))
				{
					this.OnIndexChanging(value);
					this.SendPropertyChanging();
					this._Index = value;
					this.SendPropertyChanged("Index");
					this.OnIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Readonly", DbType="Bit NOT NULL")]
		public bool Readonly
		{
			get
			{
				return this._Readonly;
			}
			set
			{
				if ((this._Readonly != value))
				{
					this.OnReadonlyChanging(value);
					this.SendPropertyChanging();
					this._Readonly = value;
					this.SendPropertyChanged("Readonly");
					this.OnReadonlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subtype", DbType="NVarChar(256)")]
		public string Subtype
		{
			get
			{
				return this._Subtype;
			}
			set
			{
				if ((this._Subtype != value))
				{
					this.OnSubtypeChanging(value);
					this.SendPropertyChanging();
					this._Subtype = value;
					this.SendPropertyChanged("Subtype");
					this.OnSubtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceColumn", DbType="Int")]
		public System.Nullable<int> SourceColumn
		{
			get
			{
				return this._SourceColumn;
			}
			set
			{
				if ((this._SourceColumn != value))
				{
					this.OnSourceColumnChanging(value);
					this.SendPropertyChanging();
					this._SourceColumn = value;
					this.SendPropertyChanged("SourceColumn");
					this.OnSourceColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TechnicalIndicatorType_TechnicalIndicator", Storage="_TechnicalIndicators", ThisKey="Id", OtherKey="TechnicalIndicatorTypeId")]
		public EntitySet<TechnicalIndicator> TechnicalIndicators
		{
			get
			{
				return this._TechnicalIndicators;
			}
			set
			{
				this._TechnicalIndicators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TechnicalIndicators(TechnicalIndicator entity)
		{
			this.SendPropertyChanging();
			entity.TechnicalIndicatorType = this;
		}
		
		private void detach_TechnicalIndicators(TechnicalIndicator entity)
		{
			this.SendPropertyChanging();
			entity.TechnicalIndicatorType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lookup.EconomicIndicatorTypes")]
	public partial class EconomicIndicatorType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Abbreviation;
		
		private string _Label;
		
		private string _Description;
		
		private string _UnitOfMeasurement;
		
		private int _Index;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private bool _Readonly;
		
		private string _Subtype;
		
		private System.Nullable<int> _SourceColumn;
		
		private EntitySet<EconomicIndicator> _EconomicIndicators;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAbbreviationChanging(string value);
    partial void OnAbbreviationChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUnitOfMeasurementChanging(string value);
    partial void OnUnitOfMeasurementChanged();
    partial void OnIndexChanging(int value);
    partial void OnIndexChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnReadonlyChanging(bool value);
    partial void OnReadonlyChanged();
    partial void OnSubtypeChanging(string value);
    partial void OnSubtypeChanged();
    partial void OnSourceColumnChanging(System.Nullable<int> value);
    partial void OnSourceColumnChanged();
    #endregion
		
		public EconomicIndicatorType()
		{
			this._EconomicIndicators = new EntitySet<EconomicIndicator>(new Action<EconomicIndicator>(this.attach_EconomicIndicators), new Action<EconomicIndicator>(this.detach_EconomicIndicators));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbreviation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Abbreviation
		{
			get
			{
				return this._Abbreviation;
			}
			set
			{
				if ((this._Abbreviation != value))
				{
					this.OnAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._Abbreviation = value;
					this.SendPropertyChanged("Abbreviation");
					this.OnAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitOfMeasurement", DbType="NVarChar(256)")]
		public string UnitOfMeasurement
		{
			get
			{
				return this._UnitOfMeasurement;
			}
			set
			{
				if ((this._UnitOfMeasurement != value))
				{
					this.OnUnitOfMeasurementChanging(value);
					this.SendPropertyChanging();
					this._UnitOfMeasurement = value;
					this.SendPropertyChanged("UnitOfMeasurement");
					this.OnUnitOfMeasurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Index]", Storage="_Index", DbType="Int NOT NULL")]
		public int Index
		{
			get
			{
				return this._Index;
			}
			set
			{
				if ((this._Index != value))
				{
					this.OnIndexChanging(value);
					this.SendPropertyChanging();
					this._Index = value;
					this.SendPropertyChanged("Index");
					this.OnIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Readonly", DbType="Bit NOT NULL")]
		public bool Readonly
		{
			get
			{
				return this._Readonly;
			}
			set
			{
				if ((this._Readonly != value))
				{
					this.OnReadonlyChanging(value);
					this.SendPropertyChanging();
					this._Readonly = value;
					this.SendPropertyChanged("Readonly");
					this.OnReadonlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subtype", DbType="NVarChar(256)")]
		public string Subtype
		{
			get
			{
				return this._Subtype;
			}
			set
			{
				if ((this._Subtype != value))
				{
					this.OnSubtypeChanging(value);
					this.SendPropertyChanging();
					this._Subtype = value;
					this.SendPropertyChanged("Subtype");
					this.OnSubtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceColumn", DbType="Int")]
		public System.Nullable<int> SourceColumn
		{
			get
			{
				return this._SourceColumn;
			}
			set
			{
				if ((this._SourceColumn != value))
				{
					this.OnSourceColumnChanging(value);
					this.SendPropertyChanging();
					this._SourceColumn = value;
					this.SendPropertyChanged("SourceColumn");
					this.OnSourceColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EconomicIndicatorType_EconomicIndicator", Storage="_EconomicIndicators", ThisKey="Id", OtherKey="EconomicIndicatorTypeId")]
		public EntitySet<EconomicIndicator> EconomicIndicators
		{
			get
			{
				return this._EconomicIndicators;
			}
			set
			{
				this._EconomicIndicators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EconomicIndicators(EconomicIndicator entity)
		{
			this.SendPropertyChanging();
			entity.EconomicIndicatorType = this;
		}
		
		private void detach_EconomicIndicators(EconomicIndicator entity)
		{
			this.SendPropertyChanging();
			entity.EconomicIndicatorType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lookup.GasPrices")]
	public partial class GasPrice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private decimal _GasPrice1;
		
		private string _Description;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private EntitySet<LinkGasPriceDiscountRate> _LinkGasPriceDiscountRates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGasPrice1Changing(decimal value);
    partial void OnGasPrice1Changed();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    #endregion
		
		public GasPrice()
		{
			this._LinkGasPriceDiscountRates = new EntitySet<LinkGasPriceDiscountRate>(new Action<LinkGasPriceDiscountRate>(this.attach_LinkGasPriceDiscountRates), new Action<LinkGasPriceDiscountRate>(this.detach_LinkGasPriceDiscountRates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="GasPrice", Storage="_GasPrice1", DbType="Decimal(10,2) NOT NULL")]
		public decimal GasPrice1
		{
			get
			{
				return this._GasPrice1;
			}
			set
			{
				if ((this._GasPrice1 != value))
				{
					this.OnGasPrice1Changing(value);
					this.SendPropertyChanging();
					this._GasPrice1 = value;
					this.SendPropertyChanged("GasPrice1");
					this.OnGasPrice1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GasPrice_LinkGasPriceDiscountRate", Storage="_LinkGasPriceDiscountRates", ThisKey="Id", OtherKey="GasPriceId")]
		public EntitySet<LinkGasPriceDiscountRate> LinkGasPriceDiscountRates
		{
			get
			{
				return this._LinkGasPriceDiscountRates;
			}
			set
			{
				this._LinkGasPriceDiscountRates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LinkGasPriceDiscountRates(LinkGasPriceDiscountRate entity)
		{
			this.SendPropertyChanging();
			entity.GasPrice = this;
		}
		
		private void detach_LinkGasPriceDiscountRates(LinkGasPriceDiscountRate entity)
		{
			this.SendPropertyChanging();
			entity.GasPrice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="link.LinkGasPriceDiscountRates")]
	public partial class LinkGasPriceDiscountRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _GasPriceId;
		
		private int _DiscountRateId;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private EntityRef<GasPrice> _GasPrice;
		
		private EntityRef<DiscountRate> _DiscountRate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGasPriceIdChanging(int value);
    partial void OnGasPriceIdChanged();
    partial void OnDiscountRateIdChanging(int value);
    partial void OnDiscountRateIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    #endregion
		
		public LinkGasPriceDiscountRate()
		{
			this._GasPrice = default(EntityRef<GasPrice>);
			this._DiscountRate = default(EntityRef<DiscountRate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GasPriceId", DbType="Int NOT NULL")]
		public int GasPriceId
		{
			get
			{
				return this._GasPriceId;
			}
			set
			{
				if ((this._GasPriceId != value))
				{
					if (this._GasPrice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGasPriceIdChanging(value);
					this.SendPropertyChanging();
					this._GasPriceId = value;
					this.SendPropertyChanged("GasPriceId");
					this.OnGasPriceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRateId", DbType="Int NOT NULL")]
		public int DiscountRateId
		{
			get
			{
				return this._DiscountRateId;
			}
			set
			{
				if ((this._DiscountRateId != value))
				{
					if (this._DiscountRate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscountRateIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountRateId = value;
					this.SendPropertyChanged("DiscountRateId");
					this.OnDiscountRateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GasPrice_LinkGasPriceDiscountRate", Storage="_GasPrice", ThisKey="GasPriceId", OtherKey="Id", IsForeignKey=true)]
		public GasPrice GasPrice
		{
			get
			{
				return this._GasPrice.Entity;
			}
			set
			{
				GasPrice previousValue = this._GasPrice.Entity;
				if (((previousValue != value) 
							|| (this._GasPrice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GasPrice.Entity = null;
						previousValue.LinkGasPriceDiscountRates.Remove(this);
					}
					this._GasPrice.Entity = value;
					if ((value != null))
					{
						value.LinkGasPriceDiscountRates.Add(this);
						this._GasPriceId = value.Id;
					}
					else
					{
						this._GasPriceId = default(int);
					}
					this.SendPropertyChanged("GasPrice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiscountRate_LinkGasPriceDiscountRate", Storage="_DiscountRate", ThisKey="DiscountRateId", OtherKey="Id", IsForeignKey=true)]
		public DiscountRate DiscountRate
		{
			get
			{
				return this._DiscountRate.Entity;
			}
			set
			{
				DiscountRate previousValue = this._DiscountRate.Entity;
				if (((previousValue != value) 
							|| (this._DiscountRate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiscountRate.Entity = null;
						previousValue.LinkGasPriceDiscountRates.Remove(this);
					}
					this._DiscountRate.Entity = value;
					if ((value != null))
					{
						value.LinkGasPriceDiscountRates.Add(this);
						this._DiscountRateId = value.Id;
					}
					else
					{
						this._DiscountRateId = default(int);
					}
					this.SendPropertyChanged("DiscountRate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lookup.DataSource")]
	public partial class DataSource : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Code;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private string _Reference;
		
		private EntitySet<ResourceOptionAttribute> _ResourceOptionAttributes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnReferenceChanging(string value);
    partial void OnReferenceChanged();
    #endregion
		
		public DataSource()
		{
			this._ResourceOptionAttributes = new EntitySet<ResourceOptionAttribute>(new Action<ResourceOptionAttribute>(this.attach_ResourceOptionAttributes), new Action<ResourceOptionAttribute>(this.detach_ResourceOptionAttributes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reference", DbType="NVarChar(MAX)")]
		public string Reference
		{
			get
			{
				return this._Reference;
			}
			set
			{
				if ((this._Reference != value))
				{
					this.OnReferenceChanging(value);
					this.SendPropertyChanging();
					this._Reference = value;
					this.SendPropertyChanged("Reference");
					this.OnReferenceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataSource_ResourceOptionAttribute", Storage="_ResourceOptionAttributes", ThisKey="Id", OtherKey="DataSourceId")]
		public EntitySet<ResourceOptionAttribute> ResourceOptionAttributes
		{
			get
			{
				return this._ResourceOptionAttributes;
			}
			set
			{
				this._ResourceOptionAttributes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResourceOptionAttributes(ResourceOptionAttribute entity)
		{
			this.SendPropertyChanging();
			entity.DataSource = this;
		}
		
		private void detach_ResourceOptionAttributes(ResourceOptionAttribute entity)
		{
			this.SendPropertyChanging();
			entity.DataSource = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="domain.ElectricalGroups")]
	public partial class ElectricalGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private int _UserCreatedId;
		
		private System.Nullable<int> _UserUpdatedId;
		
		private System.Nullable<int> _ParentPk;
		
		private string _Name;
		
		private string _Abbreviation;
		
		private EntitySet<LinkResourceOptionMapDefinition> _LinkResourceOptionMapDefinitions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnUserUpdatedIdChanging(System.Nullable<int> value);
    partial void OnUserUpdatedIdChanged();
    partial void OnParentPkChanging(System.Nullable<int> value);
    partial void OnParentPkChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAbbreviationChanging(string value);
    partial void OnAbbreviationChanged();
    #endregion
		
		public ElectricalGroup()
		{
			this._LinkResourceOptionMapDefinitions = new EntitySet<LinkResourceOptionMapDefinition>(new Action<LinkResourceOptionMapDefinition>(this.attach_LinkResourceOptionMapDefinitions), new Action<LinkResourceOptionMapDefinition>(this.detach_LinkResourceOptionMapDefinitions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedId", DbType="Int")]
		public System.Nullable<int> UserUpdatedId
		{
			get
			{
				return this._UserUpdatedId;
			}
			set
			{
				if ((this._UserUpdatedId != value))
				{
					this.OnUserUpdatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserUpdatedId = value;
					this.SendPropertyChanged("UserUpdatedId");
					this.OnUserUpdatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentPk", DbType="Int")]
		public System.Nullable<int> ParentPk
		{
			get
			{
				return this._ParentPk;
			}
			set
			{
				if ((this._ParentPk != value))
				{
					this.OnParentPkChanging(value);
					this.SendPropertyChanging();
					this._ParentPk = value;
					this.SendPropertyChanged("ParentPk");
					this.OnParentPkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbreviation", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string Abbreviation
		{
			get
			{
				return this._Abbreviation;
			}
			set
			{
				if ((this._Abbreviation != value))
				{
					this.OnAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._Abbreviation = value;
					this.SendPropertyChanged("Abbreviation");
					this.OnAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ElectricalGroup_LinkResourceOptionMapDefinition", Storage="_LinkResourceOptionMapDefinitions", ThisKey="Id", OtherKey="ElectricalGroupId")]
		public EntitySet<LinkResourceOptionMapDefinition> LinkResourceOptionMapDefinitions
		{
			get
			{
				return this._LinkResourceOptionMapDefinitions;
			}
			set
			{
				this._LinkResourceOptionMapDefinitions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LinkResourceOptionMapDefinitions(LinkResourceOptionMapDefinition entity)
		{
			this.SendPropertyChanging();
			entity.ElectricalGroup = this;
		}
		
		private void detach_LinkResourceOptionMapDefinitions(LinkResourceOptionMapDefinition entity)
		{
			this.SendPropertyChanging();
			entity.ElectricalGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="domain.ResourceBundleAttribute")]
	public partial class ResourceBundleAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _OriginalId;
		
		private int _UserCreatedId;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateEnd;
		
		private System.Nullable<System.DateTime> _DateReplaced;
		
		private System.Nullable<System.DateTime> _DateEffective;
		
		private System.Nullable<decimal> _EffectiveLoadCarryingCapacity;
		
		private System.Nullable<decimal> _DependableGenerationCapacity;
		
		private System.Nullable<decimal> _PotentialIncludeCapacity;
		
		private System.Nullable<decimal> _SystemCapacity;
		
		private System.Nullable<System.DateTime> _CommercialOperationStartDate;
		
		private System.Nullable<System.DateTime> _CommercialOperationEndDate;
		
		private int _ResourceBundleId;
		
		private System.Nullable<int> _ProjectPhaseId;
		
		private System.Nullable<int> _ResourcePlanId;
		
		private System.Nullable<decimal> _MaximumPowerOutputCapacity;
		
		private System.Nullable<decimal> _NitsDesignatedCapacity;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<int> _UserUpdatedId;
		
		private System.Nullable<bool> _IsDesignated;
		
		private System.Nullable<decimal> _NamePlateCapacityInMW;
		
		private System.Nullable<decimal> _FirmEnergy;
		
		private System.Nullable<decimal> _TotalEnergy;
		
		private System.Nullable<decimal> _UnitEnergyCostStart;
		
		private System.Nullable<decimal> _UnitEnergyCostEnd;
		
		private System.Nullable<decimal> _UnitCapacityCost;
		
		private System.Nullable<int> _EnergyAvailableYear;
		
		private System.Nullable<decimal> _AverageEnergy;
		
		private System.Nullable<decimal> _Probability;
		
		private System.Nullable<decimal> _EnergyEfficiency;
		
		private System.Nullable<int> _DiscountRateId;
		
		private EntitySet<ResourceOptionAttribute> _ResourceOptionAttributes;
		
		private EntityRef<DiscountRate> _DiscountRate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnOriginalIdChanging(System.Nullable<int> value);
    partial void OnOriginalIdChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateEndChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEndChanged();
    partial void OnDateReplacedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateReplacedChanged();
    partial void OnDateEffectiveChanging(System.Nullable<System.DateTime> value);
    partial void OnDateEffectiveChanged();
    partial void OnEffectiveLoadCarryingCapacityChanging(System.Nullable<decimal> value);
    partial void OnEffectiveLoadCarryingCapacityChanged();
    partial void OnDependableGenerationCapacityChanging(System.Nullable<decimal> value);
    partial void OnDependableGenerationCapacityChanged();
    partial void OnPotentialIncludeCapacityChanging(System.Nullable<decimal> value);
    partial void OnPotentialIncludeCapacityChanged();
    partial void OnSystemCapacityChanging(System.Nullable<decimal> value);
    partial void OnSystemCapacityChanged();
    partial void OnCommercialOperationStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCommercialOperationStartDateChanged();
    partial void OnCommercialOperationEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCommercialOperationEndDateChanged();
    partial void OnResourceBundleIdChanging(int value);
    partial void OnResourceBundleIdChanged();
    partial void OnProjectPhaseIdChanging(System.Nullable<int> value);
    partial void OnProjectPhaseIdChanged();
    partial void OnResourcePlanIdChanging(System.Nullable<int> value);
    partial void OnResourcePlanIdChanged();
    partial void OnMaximumPowerOutputCapacityChanging(System.Nullable<decimal> value);
    partial void OnMaximumPowerOutputCapacityChanged();
    partial void OnNitsDesignatedCapacityChanging(System.Nullable<decimal> value);
    partial void OnNitsDesignatedCapacityChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnUserUpdatedIdChanging(System.Nullable<int> value);
    partial void OnUserUpdatedIdChanged();
    partial void OnIsDesignatedChanging(System.Nullable<bool> value);
    partial void OnIsDesignatedChanged();
    partial void OnNamePlateCapacityInMWChanging(System.Nullable<decimal> value);
    partial void OnNamePlateCapacityInMWChanged();
    partial void OnFirmEnergyChanging(System.Nullable<decimal> value);
    partial void OnFirmEnergyChanged();
    partial void OnTotalEnergyChanging(System.Nullable<decimal> value);
    partial void OnTotalEnergyChanged();
    partial void OnUnitEnergyCostStartChanging(System.Nullable<decimal> value);
    partial void OnUnitEnergyCostStartChanged();
    partial void OnUnitEnergyCostEndChanging(System.Nullable<decimal> value);
    partial void OnUnitEnergyCostEndChanged();
    partial void OnUnitCapacityCostChanging(System.Nullable<decimal> value);
    partial void OnUnitCapacityCostChanged();
    partial void OnEnergyAvailableYearChanging(System.Nullable<int> value);
    partial void OnEnergyAvailableYearChanged();
    partial void OnAverageEnergyChanging(System.Nullable<decimal> value);
    partial void OnAverageEnergyChanged();
    partial void OnProbabilityChanging(System.Nullable<decimal> value);
    partial void OnProbabilityChanged();
    partial void OnEnergyEfficiencyChanging(System.Nullable<decimal> value);
    partial void OnEnergyEfficiencyChanged();
    partial void OnDiscountRateIdChanging(System.Nullable<int> value);
    partial void OnDiscountRateIdChanged();
    #endregion
		
		public ResourceBundleAttribute()
		{
			this._ResourceOptionAttributes = new EntitySet<ResourceOptionAttribute>(new Action<ResourceOptionAttribute>(this.attach_ResourceOptionAttributes), new Action<ResourceOptionAttribute>(this.detach_ResourceOptionAttributes));
			this._DiscountRate = default(EntityRef<DiscountRate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OriginalId", DbType="Int")]
		public System.Nullable<int> OriginalId
		{
			get
			{
				return this._OriginalId;
			}
			set
			{
				if ((this._OriginalId != value))
				{
					this.OnOriginalIdChanging(value);
					this.SendPropertyChanging();
					this._OriginalId = value;
					this.SendPropertyChanged("OriginalId");
					this.OnOriginalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEnd", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEnd
		{
			get
			{
				return this._DateEnd;
			}
			set
			{
				if ((this._DateEnd != value))
				{
					this.OnDateEndChanging(value);
					this.SendPropertyChanging();
					this._DateEnd = value;
					this.SendPropertyChanged("DateEnd");
					this.OnDateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateReplaced", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateReplaced
		{
			get
			{
				return this._DateReplaced;
			}
			set
			{
				if ((this._DateReplaced != value))
				{
					this.OnDateReplacedChanging(value);
					this.SendPropertyChanging();
					this._DateReplaced = value;
					this.SendPropertyChanged("DateReplaced");
					this.OnDateReplacedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateEffective", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateEffective
		{
			get
			{
				return this._DateEffective;
			}
			set
			{
				if ((this._DateEffective != value))
				{
					this.OnDateEffectiveChanging(value);
					this.SendPropertyChanging();
					this._DateEffective = value;
					this.SendPropertyChanged("DateEffective");
					this.OnDateEffectiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectiveLoadCarryingCapacity", DbType="Decimal(20,10)")]
		public System.Nullable<decimal> EffectiveLoadCarryingCapacity
		{
			get
			{
				return this._EffectiveLoadCarryingCapacity;
			}
			set
			{
				if ((this._EffectiveLoadCarryingCapacity != value))
				{
					this.OnEffectiveLoadCarryingCapacityChanging(value);
					this.SendPropertyChanging();
					this._EffectiveLoadCarryingCapacity = value;
					this.SendPropertyChanged("EffectiveLoadCarryingCapacity");
					this.OnEffectiveLoadCarryingCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DependableGenerationCapacity", DbType="Decimal(20,10)")]
		public System.Nullable<decimal> DependableGenerationCapacity
		{
			get
			{
				return this._DependableGenerationCapacity;
			}
			set
			{
				if ((this._DependableGenerationCapacity != value))
				{
					this.OnDependableGenerationCapacityChanging(value);
					this.SendPropertyChanging();
					this._DependableGenerationCapacity = value;
					this.SendPropertyChanged("DependableGenerationCapacity");
					this.OnDependableGenerationCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PotentialIncludeCapacity", DbType="Decimal(20,10)")]
		public System.Nullable<decimal> PotentialIncludeCapacity
		{
			get
			{
				return this._PotentialIncludeCapacity;
			}
			set
			{
				if ((this._PotentialIncludeCapacity != value))
				{
					this.OnPotentialIncludeCapacityChanging(value);
					this.SendPropertyChanging();
					this._PotentialIncludeCapacity = value;
					this.SendPropertyChanged("PotentialIncludeCapacity");
					this.OnPotentialIncludeCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SystemCapacity", DbType="Decimal(20,10)")]
		public System.Nullable<decimal> SystemCapacity
		{
			get
			{
				return this._SystemCapacity;
			}
			set
			{
				if ((this._SystemCapacity != value))
				{
					this.OnSystemCapacityChanging(value);
					this.SendPropertyChanging();
					this._SystemCapacity = value;
					this.SendPropertyChanged("SystemCapacity");
					this.OnSystemCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommercialOperationStartDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CommercialOperationStartDate
		{
			get
			{
				return this._CommercialOperationStartDate;
			}
			set
			{
				if ((this._CommercialOperationStartDate != value))
				{
					this.OnCommercialOperationStartDateChanging(value);
					this.SendPropertyChanging();
					this._CommercialOperationStartDate = value;
					this.SendPropertyChanged("CommercialOperationStartDate");
					this.OnCommercialOperationStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommercialOperationEndDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CommercialOperationEndDate
		{
			get
			{
				return this._CommercialOperationEndDate;
			}
			set
			{
				if ((this._CommercialOperationEndDate != value))
				{
					this.OnCommercialOperationEndDateChanging(value);
					this.SendPropertyChanging();
					this._CommercialOperationEndDate = value;
					this.SendPropertyChanged("CommercialOperationEndDate");
					this.OnCommercialOperationEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceBundleId", DbType="Int NOT NULL")]
		public int ResourceBundleId
		{
			get
			{
				return this._ResourceBundleId;
			}
			set
			{
				if ((this._ResourceBundleId != value))
				{
					this.OnResourceBundleIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceBundleId = value;
					this.SendPropertyChanged("ResourceBundleId");
					this.OnResourceBundleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectPhaseId", DbType="Int")]
		public System.Nullable<int> ProjectPhaseId
		{
			get
			{
				return this._ProjectPhaseId;
			}
			set
			{
				if ((this._ProjectPhaseId != value))
				{
					this.OnProjectPhaseIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectPhaseId = value;
					this.SendPropertyChanged("ProjectPhaseId");
					this.OnProjectPhaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourcePlanId", DbType="Int")]
		public System.Nullable<int> ResourcePlanId
		{
			get
			{
				return this._ResourcePlanId;
			}
			set
			{
				if ((this._ResourcePlanId != value))
				{
					this.OnResourcePlanIdChanging(value);
					this.SendPropertyChanging();
					this._ResourcePlanId = value;
					this.SendPropertyChanged("ResourcePlanId");
					this.OnResourcePlanIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaximumPowerOutputCapacity", DbType="Decimal(20,10)")]
		public System.Nullable<decimal> MaximumPowerOutputCapacity
		{
			get
			{
				return this._MaximumPowerOutputCapacity;
			}
			set
			{
				if ((this._MaximumPowerOutputCapacity != value))
				{
					this.OnMaximumPowerOutputCapacityChanging(value);
					this.SendPropertyChanging();
					this._MaximumPowerOutputCapacity = value;
					this.SendPropertyChanged("MaximumPowerOutputCapacity");
					this.OnMaximumPowerOutputCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NitsDesignatedCapacity", DbType="Decimal(20,10)")]
		public System.Nullable<decimal> NitsDesignatedCapacity
		{
			get
			{
				return this._NitsDesignatedCapacity;
			}
			set
			{
				if ((this._NitsDesignatedCapacity != value))
				{
					this.OnNitsDesignatedCapacityChanging(value);
					this.SendPropertyChanging();
					this._NitsDesignatedCapacity = value;
					this.SendPropertyChanged("NitsDesignatedCapacity");
					this.OnNitsDesignatedCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedId", DbType="Int")]
		public System.Nullable<int> UserUpdatedId
		{
			get
			{
				return this._UserUpdatedId;
			}
			set
			{
				if ((this._UserUpdatedId != value))
				{
					this.OnUserUpdatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserUpdatedId = value;
					this.SendPropertyChanged("UserUpdatedId");
					this.OnUserUpdatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDesignated", DbType="Bit")]
		public System.Nullable<bool> IsDesignated
		{
			get
			{
				return this._IsDesignated;
			}
			set
			{
				if ((this._IsDesignated != value))
				{
					this.OnIsDesignatedChanging(value);
					this.SendPropertyChanging();
					this._IsDesignated = value;
					this.SendPropertyChanged("IsDesignated");
					this.OnIsDesignatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamePlateCapacityInMW", DbType="Decimal(20,10)")]
		public System.Nullable<decimal> NamePlateCapacityInMW
		{
			get
			{
				return this._NamePlateCapacityInMW;
			}
			set
			{
				if ((this._NamePlateCapacityInMW != value))
				{
					this.OnNamePlateCapacityInMWChanging(value);
					this.SendPropertyChanging();
					this._NamePlateCapacityInMW = value;
					this.SendPropertyChanged("NamePlateCapacityInMW");
					this.OnNamePlateCapacityInMWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirmEnergy", DbType="Decimal(20,10)")]
		public System.Nullable<decimal> FirmEnergy
		{
			get
			{
				return this._FirmEnergy;
			}
			set
			{
				if ((this._FirmEnergy != value))
				{
					this.OnFirmEnergyChanging(value);
					this.SendPropertyChanging();
					this._FirmEnergy = value;
					this.SendPropertyChanged("FirmEnergy");
					this.OnFirmEnergyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalEnergy", DbType="Decimal(20,10)")]
		public System.Nullable<decimal> TotalEnergy
		{
			get
			{
				return this._TotalEnergy;
			}
			set
			{
				if ((this._TotalEnergy != value))
				{
					this.OnTotalEnergyChanging(value);
					this.SendPropertyChanging();
					this._TotalEnergy = value;
					this.SendPropertyChanged("TotalEnergy");
					this.OnTotalEnergyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitEnergyCostStart", DbType="Decimal(20,10)")]
		public System.Nullable<decimal> UnitEnergyCostStart
		{
			get
			{
				return this._UnitEnergyCostStart;
			}
			set
			{
				if ((this._UnitEnergyCostStart != value))
				{
					this.OnUnitEnergyCostStartChanging(value);
					this.SendPropertyChanging();
					this._UnitEnergyCostStart = value;
					this.SendPropertyChanged("UnitEnergyCostStart");
					this.OnUnitEnergyCostStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitEnergyCostEnd", DbType="Decimal(20,10)")]
		public System.Nullable<decimal> UnitEnergyCostEnd
		{
			get
			{
				return this._UnitEnergyCostEnd;
			}
			set
			{
				if ((this._UnitEnergyCostEnd != value))
				{
					this.OnUnitEnergyCostEndChanging(value);
					this.SendPropertyChanging();
					this._UnitEnergyCostEnd = value;
					this.SendPropertyChanged("UnitEnergyCostEnd");
					this.OnUnitEnergyCostEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitCapacityCost", DbType="Decimal(20,10)")]
		public System.Nullable<decimal> UnitCapacityCost
		{
			get
			{
				return this._UnitCapacityCost;
			}
			set
			{
				if ((this._UnitCapacityCost != value))
				{
					this.OnUnitCapacityCostChanging(value);
					this.SendPropertyChanging();
					this._UnitCapacityCost = value;
					this.SendPropertyChanged("UnitCapacityCost");
					this.OnUnitCapacityCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnergyAvailableYear", DbType="Int")]
		public System.Nullable<int> EnergyAvailableYear
		{
			get
			{
				return this._EnergyAvailableYear;
			}
			set
			{
				if ((this._EnergyAvailableYear != value))
				{
					this.OnEnergyAvailableYearChanging(value);
					this.SendPropertyChanging();
					this._EnergyAvailableYear = value;
					this.SendPropertyChanged("EnergyAvailableYear");
					this.OnEnergyAvailableYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageEnergy", DbType="Decimal(20,10)")]
		public System.Nullable<decimal> AverageEnergy
		{
			get
			{
				return this._AverageEnergy;
			}
			set
			{
				if ((this._AverageEnergy != value))
				{
					this.OnAverageEnergyChanging(value);
					this.SendPropertyChanging();
					this._AverageEnergy = value;
					this.SendPropertyChanged("AverageEnergy");
					this.OnAverageEnergyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Probability", DbType="Decimal(20,10)")]
		public System.Nullable<decimal> Probability
		{
			get
			{
				return this._Probability;
			}
			set
			{
				if ((this._Probability != value))
				{
					this.OnProbabilityChanging(value);
					this.SendPropertyChanging();
					this._Probability = value;
					this.SendPropertyChanged("Probability");
					this.OnProbabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnergyEfficiency", DbType="Decimal(20,10)")]
		public System.Nullable<decimal> EnergyEfficiency
		{
			get
			{
				return this._EnergyEfficiency;
			}
			set
			{
				if ((this._EnergyEfficiency != value))
				{
					this.OnEnergyEfficiencyChanging(value);
					this.SendPropertyChanging();
					this._EnergyEfficiency = value;
					this.SendPropertyChanged("EnergyEfficiency");
					this.OnEnergyEfficiencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRateId", DbType="Int")]
		public System.Nullable<int> DiscountRateId
		{
			get
			{
				return this._DiscountRateId;
			}
			set
			{
				if ((this._DiscountRateId != value))
				{
					if (this._DiscountRate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscountRateIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountRateId = value;
					this.SendPropertyChanged("DiscountRateId");
					this.OnDiscountRateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResourceBundleAttribute_ResourceOptionAttribute", Storage="_ResourceOptionAttributes", ThisKey="Id", OtherKey="ResourceBundleAttributeId")]
		public EntitySet<ResourceOptionAttribute> ResourceOptionAttributes
		{
			get
			{
				return this._ResourceOptionAttributes;
			}
			set
			{
				this._ResourceOptionAttributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiscountRate_ResourceBundleAttribute", Storage="_DiscountRate", ThisKey="DiscountRateId", OtherKey="Id", IsForeignKey=true)]
		public DiscountRate DiscountRate
		{
			get
			{
				return this._DiscountRate.Entity;
			}
			set
			{
				DiscountRate previousValue = this._DiscountRate.Entity;
				if (((previousValue != value) 
							|| (this._DiscountRate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiscountRate.Entity = null;
						previousValue.ResourceBundleAttributes.Remove(this);
					}
					this._DiscountRate.Entity = value;
					if ((value != null))
					{
						value.ResourceBundleAttributes.Add(this);
						this._DiscountRateId = value.Id;
					}
					else
					{
						this._DiscountRateId = default(Nullable<int>);
					}
					this.SendPropertyChanged("DiscountRate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResourceOptionAttributes(ResourceOptionAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ResourceBundleAttribute = this;
		}
		
		private void detach_ResourceOptionAttributes(ResourceOptionAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ResourceBundleAttribute = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lookup.BcStatsIndicatorTypes")]
	public partial class BcStatsIndicatorType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Description;
		
		private string _Code;
		
		private string _UnitOfMeasure;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private EntitySet<BcStatsIndicator> _BcStatsIndicators;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnUnitOfMeasureChanging(string value);
    partial void OnUnitOfMeasureChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    #endregion
		
		public BcStatsIndicatorType()
		{
			this._BcStatsIndicators = new EntitySet<BcStatsIndicator>(new Action<BcStatsIndicator>(this.attach_BcStatsIndicators), new Action<BcStatsIndicator>(this.detach_BcStatsIndicators));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(100)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitOfMeasure", DbType="NVarChar(256)")]
		public string UnitOfMeasure
		{
			get
			{
				return this._UnitOfMeasure;
			}
			set
			{
				if ((this._UnitOfMeasure != value))
				{
					this.OnUnitOfMeasureChanging(value);
					this.SendPropertyChanging();
					this._UnitOfMeasure = value;
					this.SendPropertyChanged("UnitOfMeasure");
					this.OnUnitOfMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BcStatsIndicatorType_BcStatsIndicator", Storage="_BcStatsIndicators", ThisKey="Id", OtherKey="BcStatsIndicatorTypeId")]
		public EntitySet<BcStatsIndicator> BcStatsIndicators
		{
			get
			{
				return this._BcStatsIndicators;
			}
			set
			{
				this._BcStatsIndicators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BcStatsIndicators(BcStatsIndicator entity)
		{
			this.SendPropertyChanging();
			entity.BcStatsIndicatorType = this;
		}
		
		private void detach_BcStatsIndicators(BcStatsIndicator entity)
		{
			this.SendPropertyChanging();
			entity.BcStatsIndicatorType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="domain.BcStatsIndicatorModels")]
	public partial class BcStatsIndicatorModel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ForecastYear;
		
		private int _FuelTypeId;
		
		private string _Description;
		
		private System.Nullable<decimal> _ProjectCapacityStartRange;
		
		private System.Nullable<decimal> _ProjectCapacityEndRange;
		
		private System.Nullable<decimal> _CapitalCost;
		
		private System.Nullable<decimal> _OptionationalCost;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private System.Nullable<int> _FinIndicatorTypeId;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<int> _UserUpdatedId;
		
		private EntitySet<BcStatsIndicator> _BcStatsIndicators;
		
		private EntityRef<FuelType> _FuelType;
		
		private EntityRef<FinancialIndicatorType> _FinancialIndicatorType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnForecastYearChanging(int value);
    partial void OnForecastYearChanged();
    partial void OnFuelTypeIdChanging(int value);
    partial void OnFuelTypeIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnProjectCapacityStartRangeChanging(System.Nullable<decimal> value);
    partial void OnProjectCapacityStartRangeChanged();
    partial void OnProjectCapacityEndRangeChanging(System.Nullable<decimal> value);
    partial void OnProjectCapacityEndRangeChanged();
    partial void OnCapitalCostChanging(System.Nullable<decimal> value);
    partial void OnCapitalCostChanged();
    partial void OnOptionationalCostChanging(System.Nullable<decimal> value);
    partial void OnOptionationalCostChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnFinIndicatorTypeIdChanging(System.Nullable<int> value);
    partial void OnFinIndicatorTypeIdChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnUserUpdatedIdChanging(System.Nullable<int> value);
    partial void OnUserUpdatedIdChanged();
    #endregion
		
		public BcStatsIndicatorModel()
		{
			this._BcStatsIndicators = new EntitySet<BcStatsIndicator>(new Action<BcStatsIndicator>(this.attach_BcStatsIndicators), new Action<BcStatsIndicator>(this.detach_BcStatsIndicators));
			this._FuelType = default(EntityRef<FuelType>);
			this._FinancialIndicatorType = default(EntityRef<FinancialIndicatorType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForecastYear", DbType="Int NOT NULL")]
		public int ForecastYear
		{
			get
			{
				return this._ForecastYear;
			}
			set
			{
				if ((this._ForecastYear != value))
				{
					this.OnForecastYearChanging(value);
					this.SendPropertyChanging();
					this._ForecastYear = value;
					this.SendPropertyChanged("ForecastYear");
					this.OnForecastYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelTypeId", DbType="Int NOT NULL")]
		public int FuelTypeId
		{
			get
			{
				return this._FuelTypeId;
			}
			set
			{
				if ((this._FuelTypeId != value))
				{
					if (this._FuelType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFuelTypeIdChanging(value);
					this.SendPropertyChanging();
					this._FuelTypeId = value;
					this.SendPropertyChanged("FuelTypeId");
					this.OnFuelTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCapacityStartRange", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ProjectCapacityStartRange
		{
			get
			{
				return this._ProjectCapacityStartRange;
			}
			set
			{
				if ((this._ProjectCapacityStartRange != value))
				{
					this.OnProjectCapacityStartRangeChanging(value);
					this.SendPropertyChanging();
					this._ProjectCapacityStartRange = value;
					this.SendPropertyChanged("ProjectCapacityStartRange");
					this.OnProjectCapacityStartRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectCapacityEndRange", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> ProjectCapacityEndRange
		{
			get
			{
				return this._ProjectCapacityEndRange;
			}
			set
			{
				if ((this._ProjectCapacityEndRange != value))
				{
					this.OnProjectCapacityEndRangeChanging(value);
					this.SendPropertyChanging();
					this._ProjectCapacityEndRange = value;
					this.SendPropertyChanged("ProjectCapacityEndRange");
					this.OnProjectCapacityEndRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapitalCost", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> CapitalCost
		{
			get
			{
				return this._CapitalCost;
			}
			set
			{
				if ((this._CapitalCost != value))
				{
					this.OnCapitalCostChanging(value);
					this.SendPropertyChanging();
					this._CapitalCost = value;
					this.SendPropertyChanged("CapitalCost");
					this.OnCapitalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OptionationalCost", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> OptionationalCost
		{
			get
			{
				return this._OptionationalCost;
			}
			set
			{
				if ((this._OptionationalCost != value))
				{
					this.OnOptionationalCostChanging(value);
					this.SendPropertyChanging();
					this._OptionationalCost = value;
					this.SendPropertyChanged("OptionationalCost");
					this.OnOptionationalCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinIndicatorTypeId", DbType="Int")]
		public System.Nullable<int> FinIndicatorTypeId
		{
			get
			{
				return this._FinIndicatorTypeId;
			}
			set
			{
				if ((this._FinIndicatorTypeId != value))
				{
					if (this._FinancialIndicatorType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinIndicatorTypeIdChanging(value);
					this.SendPropertyChanging();
					this._FinIndicatorTypeId = value;
					this.SendPropertyChanged("FinIndicatorTypeId");
					this.OnFinIndicatorTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedId", DbType="Int")]
		public System.Nullable<int> UserUpdatedId
		{
			get
			{
				return this._UserUpdatedId;
			}
			set
			{
				if ((this._UserUpdatedId != value))
				{
					this.OnUserUpdatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserUpdatedId = value;
					this.SendPropertyChanged("UserUpdatedId");
					this.OnUserUpdatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BcStatsIndicatorModel_BcStatsIndicator", Storage="_BcStatsIndicators", ThisKey="Id", OtherKey="BcStatsIndicatorModelId")]
		public EntitySet<BcStatsIndicator> BcStatsIndicators
		{
			get
			{
				return this._BcStatsIndicators;
			}
			set
			{
				this._BcStatsIndicators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FuelType_BcStatsIndicatorModel", Storage="_FuelType", ThisKey="FuelTypeId", OtherKey="Id", IsForeignKey=true)]
		public FuelType FuelType
		{
			get
			{
				return this._FuelType.Entity;
			}
			set
			{
				FuelType previousValue = this._FuelType.Entity;
				if (((previousValue != value) 
							|| (this._FuelType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FuelType.Entity = null;
						previousValue.BcStatsIndicatorModels.Remove(this);
					}
					this._FuelType.Entity = value;
					if ((value != null))
					{
						value.BcStatsIndicatorModels.Add(this);
						this._FuelTypeId = value.Id;
					}
					else
					{
						this._FuelTypeId = default(int);
					}
					this.SendPropertyChanged("FuelType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancialIndicatorType_BcStatsIndicatorModel", Storage="_FinancialIndicatorType", ThisKey="FinIndicatorTypeId", OtherKey="Id", IsForeignKey=true)]
		public FinancialIndicatorType FinancialIndicatorType
		{
			get
			{
				return this._FinancialIndicatorType.Entity;
			}
			set
			{
				FinancialIndicatorType previousValue = this._FinancialIndicatorType.Entity;
				if (((previousValue != value) 
							|| (this._FinancialIndicatorType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinancialIndicatorType.Entity = null;
						previousValue.BcStatsIndicatorModels.Remove(this);
					}
					this._FinancialIndicatorType.Entity = value;
					if ((value != null))
					{
						value.BcStatsIndicatorModels.Add(this);
						this._FinIndicatorTypeId = value.Id;
					}
					else
					{
						this._FinIndicatorTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("FinancialIndicatorType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BcStatsIndicators(BcStatsIndicator entity)
		{
			this.SendPropertyChanging();
			entity.BcStatsIndicatorModel = this;
		}
		
		private void detach_BcStatsIndicators(BcStatsIndicator entity)
		{
			this.SendPropertyChanging();
			entity.BcStatsIndicatorModel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="domain.BcStatsIndicators")]
	public partial class BcStatsIndicator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _BcStatsIndicatorModelId;
		
		private decimal _DirectCost;
		
		private decimal _IndirectCost;
		
		private decimal _InducedCost;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private int _BcStatsIndicatorTypeId;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<int> _UserUpdatedId;
		
		private EntityRef<BcStatsIndicatorModel> _BcStatsIndicatorModel;
		
		private EntityRef<BcStatsIndicatorType> _BcStatsIndicatorType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnBcStatsIndicatorModelIdChanging(int value);
    partial void OnBcStatsIndicatorModelIdChanged();
    partial void OnDirectCostChanging(decimal value);
    partial void OnDirectCostChanged();
    partial void OnIndirectCostChanging(decimal value);
    partial void OnIndirectCostChanged();
    partial void OnInducedCostChanging(decimal value);
    partial void OnInducedCostChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnBcStatsIndicatorTypeIdChanging(int value);
    partial void OnBcStatsIndicatorTypeIdChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnUserUpdatedIdChanging(System.Nullable<int> value);
    partial void OnUserUpdatedIdChanged();
    #endregion
		
		public BcStatsIndicator()
		{
			this._BcStatsIndicatorModel = default(EntityRef<BcStatsIndicatorModel>);
			this._BcStatsIndicatorType = default(EntityRef<BcStatsIndicatorType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BcStatsIndicatorModelId", DbType="Int NOT NULL")]
		public int BcStatsIndicatorModelId
		{
			get
			{
				return this._BcStatsIndicatorModelId;
			}
			set
			{
				if ((this._BcStatsIndicatorModelId != value))
				{
					if (this._BcStatsIndicatorModel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBcStatsIndicatorModelIdChanging(value);
					this.SendPropertyChanging();
					this._BcStatsIndicatorModelId = value;
					this.SendPropertyChanged("BcStatsIndicatorModelId");
					this.OnBcStatsIndicatorModelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DirectCost", DbType="Decimal(10,2) NOT NULL")]
		public decimal DirectCost
		{
			get
			{
				return this._DirectCost;
			}
			set
			{
				if ((this._DirectCost != value))
				{
					this.OnDirectCostChanging(value);
					this.SendPropertyChanging();
					this._DirectCost = value;
					this.SendPropertyChanged("DirectCost");
					this.OnDirectCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IndirectCost", DbType="Decimal(10,2) NOT NULL")]
		public decimal IndirectCost
		{
			get
			{
				return this._IndirectCost;
			}
			set
			{
				if ((this._IndirectCost != value))
				{
					this.OnIndirectCostChanging(value);
					this.SendPropertyChanging();
					this._IndirectCost = value;
					this.SendPropertyChanged("IndirectCost");
					this.OnIndirectCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InducedCost", DbType="Decimal(10,2) NOT NULL")]
		public decimal InducedCost
		{
			get
			{
				return this._InducedCost;
			}
			set
			{
				if ((this._InducedCost != value))
				{
					this.OnInducedCostChanging(value);
					this.SendPropertyChanging();
					this._InducedCost = value;
					this.SendPropertyChanged("InducedCost");
					this.OnInducedCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BcStatsIndicatorTypeId", DbType="Int NOT NULL")]
		public int BcStatsIndicatorTypeId
		{
			get
			{
				return this._BcStatsIndicatorTypeId;
			}
			set
			{
				if ((this._BcStatsIndicatorTypeId != value))
				{
					if (this._BcStatsIndicatorType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBcStatsIndicatorTypeIdChanging(value);
					this.SendPropertyChanging();
					this._BcStatsIndicatorTypeId = value;
					this.SendPropertyChanged("BcStatsIndicatorTypeId");
					this.OnBcStatsIndicatorTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedId", DbType="Int")]
		public System.Nullable<int> UserUpdatedId
		{
			get
			{
				return this._UserUpdatedId;
			}
			set
			{
				if ((this._UserUpdatedId != value))
				{
					this.OnUserUpdatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserUpdatedId = value;
					this.SendPropertyChanged("UserUpdatedId");
					this.OnUserUpdatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BcStatsIndicatorModel_BcStatsIndicator", Storage="_BcStatsIndicatorModel", ThisKey="BcStatsIndicatorModelId", OtherKey="Id", IsForeignKey=true)]
		public BcStatsIndicatorModel BcStatsIndicatorModel
		{
			get
			{
				return this._BcStatsIndicatorModel.Entity;
			}
			set
			{
				BcStatsIndicatorModel previousValue = this._BcStatsIndicatorModel.Entity;
				if (((previousValue != value) 
							|| (this._BcStatsIndicatorModel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BcStatsIndicatorModel.Entity = null;
						previousValue.BcStatsIndicators.Remove(this);
					}
					this._BcStatsIndicatorModel.Entity = value;
					if ((value != null))
					{
						value.BcStatsIndicators.Add(this);
						this._BcStatsIndicatorModelId = value.Id;
					}
					else
					{
						this._BcStatsIndicatorModelId = default(int);
					}
					this.SendPropertyChanged("BcStatsIndicatorModel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BcStatsIndicatorType_BcStatsIndicator", Storage="_BcStatsIndicatorType", ThisKey="BcStatsIndicatorTypeId", OtherKey="Id", IsForeignKey=true)]
		public BcStatsIndicatorType BcStatsIndicatorType
		{
			get
			{
				return this._BcStatsIndicatorType.Entity;
			}
			set
			{
				BcStatsIndicatorType previousValue = this._BcStatsIndicatorType.Entity;
				if (((previousValue != value) 
							|| (this._BcStatsIndicatorType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BcStatsIndicatorType.Entity = null;
						previousValue.BcStatsIndicators.Remove(this);
					}
					this._BcStatsIndicatorType.Entity = value;
					if ((value != null))
					{
						value.BcStatsIndicators.Add(this);
						this._BcStatsIndicatorTypeId = value.Id;
					}
					else
					{
						this._BcStatsIndicatorTypeId = default(int);
					}
					this.SendPropertyChanged("BcStatsIndicatorType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lookup.FinancialIndicatorTypes")]
	public partial class FinancialIndicatorType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Abbreviation;
		
		private string _Label;
		
		private string _Description;
		
		private string _UnitOfMeasurement;
		
		private int _Index;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private bool _Readonly;
		
		private string _Subtype;
		
		private System.Nullable<int> _SourceColumn;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<int> _UserUpdatedId;
		
		private EntitySet<BcStatsIndicatorModel> _BcStatsIndicatorModels;
		
		private EntitySet<FinancialIndicator> _FinancialIndicators;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAbbreviationChanging(string value);
    partial void OnAbbreviationChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUnitOfMeasurementChanging(string value);
    partial void OnUnitOfMeasurementChanged();
    partial void OnIndexChanging(int value);
    partial void OnIndexChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnReadonlyChanging(bool value);
    partial void OnReadonlyChanged();
    partial void OnSubtypeChanging(string value);
    partial void OnSubtypeChanged();
    partial void OnSourceColumnChanging(System.Nullable<int> value);
    partial void OnSourceColumnChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnUserUpdatedIdChanging(System.Nullable<int> value);
    partial void OnUserUpdatedIdChanged();
    #endregion
		
		public FinancialIndicatorType()
		{
			this._BcStatsIndicatorModels = new EntitySet<BcStatsIndicatorModel>(new Action<BcStatsIndicatorModel>(this.attach_BcStatsIndicatorModels), new Action<BcStatsIndicatorModel>(this.detach_BcStatsIndicatorModels));
			this._FinancialIndicators = new EntitySet<FinancialIndicator>(new Action<FinancialIndicator>(this.attach_FinancialIndicators), new Action<FinancialIndicator>(this.detach_FinancialIndicators));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbreviation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Abbreviation
		{
			get
			{
				return this._Abbreviation;
			}
			set
			{
				if ((this._Abbreviation != value))
				{
					this.OnAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._Abbreviation = value;
					this.SendPropertyChanged("Abbreviation");
					this.OnAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitOfMeasurement", DbType="NVarChar(256)")]
		public string UnitOfMeasurement
		{
			get
			{
				return this._UnitOfMeasurement;
			}
			set
			{
				if ((this._UnitOfMeasurement != value))
				{
					this.OnUnitOfMeasurementChanging(value);
					this.SendPropertyChanging();
					this._UnitOfMeasurement = value;
					this.SendPropertyChanged("UnitOfMeasurement");
					this.OnUnitOfMeasurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Index]", Storage="_Index", DbType="Int NOT NULL")]
		public int Index
		{
			get
			{
				return this._Index;
			}
			set
			{
				if ((this._Index != value))
				{
					this.OnIndexChanging(value);
					this.SendPropertyChanging();
					this._Index = value;
					this.SendPropertyChanged("Index");
					this.OnIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Readonly", DbType="Bit NOT NULL")]
		public bool Readonly
		{
			get
			{
				return this._Readonly;
			}
			set
			{
				if ((this._Readonly != value))
				{
					this.OnReadonlyChanging(value);
					this.SendPropertyChanging();
					this._Readonly = value;
					this.SendPropertyChanged("Readonly");
					this.OnReadonlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subtype", DbType="NVarChar(256)")]
		public string Subtype
		{
			get
			{
				return this._Subtype;
			}
			set
			{
				if ((this._Subtype != value))
				{
					this.OnSubtypeChanging(value);
					this.SendPropertyChanging();
					this._Subtype = value;
					this.SendPropertyChanged("Subtype");
					this.OnSubtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceColumn", DbType="Int")]
		public System.Nullable<int> SourceColumn
		{
			get
			{
				return this._SourceColumn;
			}
			set
			{
				if ((this._SourceColumn != value))
				{
					this.OnSourceColumnChanging(value);
					this.SendPropertyChanging();
					this._SourceColumn = value;
					this.SendPropertyChanged("SourceColumn");
					this.OnSourceColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedId", DbType="Int")]
		public System.Nullable<int> UserUpdatedId
		{
			get
			{
				return this._UserUpdatedId;
			}
			set
			{
				if ((this._UserUpdatedId != value))
				{
					this.OnUserUpdatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserUpdatedId = value;
					this.SendPropertyChanged("UserUpdatedId");
					this.OnUserUpdatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancialIndicatorType_BcStatsIndicatorModel", Storage="_BcStatsIndicatorModels", ThisKey="Id", OtherKey="FinIndicatorTypeId")]
		public EntitySet<BcStatsIndicatorModel> BcStatsIndicatorModels
		{
			get
			{
				return this._BcStatsIndicatorModels;
			}
			set
			{
				this._BcStatsIndicatorModels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancialIndicatorType_FinancialIndicator", Storage="_FinancialIndicators", ThisKey="Id", OtherKey="FinancialIndicatorTypeId")]
		public EntitySet<FinancialIndicator> FinancialIndicators
		{
			get
			{
				return this._FinancialIndicators;
			}
			set
			{
				this._FinancialIndicators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BcStatsIndicatorModels(BcStatsIndicatorModel entity)
		{
			this.SendPropertyChanging();
			entity.FinancialIndicatorType = this;
		}
		
		private void detach_BcStatsIndicatorModels(BcStatsIndicatorModel entity)
		{
			this.SendPropertyChanging();
			entity.FinancialIndicatorType = null;
		}
		
		private void attach_FinancialIndicators(FinancialIndicator entity)
		{
			this.SendPropertyChanging();
			entity.FinancialIndicatorType = this;
		}
		
		private void detach_FinancialIndicators(FinancialIndicator entity)
		{
			this.SendPropertyChanging();
			entity.FinancialIndicatorType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lookup.FinancialIndicatorScenarios")]
	public partial class FinancialIndicatorScenario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Code;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<int> _UserUpdatedId;
		
		private EntitySet<FinancialIndicator> _FinancialIndicators;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnUserUpdatedIdChanging(System.Nullable<int> value);
    partial void OnUserUpdatedIdChanged();
    #endregion
		
		public FinancialIndicatorScenario()
		{
			this._FinancialIndicators = new EntitySet<FinancialIndicator>(new Action<FinancialIndicator>(this.attach_FinancialIndicators), new Action<FinancialIndicator>(this.detach_FinancialIndicators));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedId", DbType="Int")]
		public System.Nullable<int> UserUpdatedId
		{
			get
			{
				return this._UserUpdatedId;
			}
			set
			{
				if ((this._UserUpdatedId != value))
				{
					this.OnUserUpdatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserUpdatedId = value;
					this.SendPropertyChanged("UserUpdatedId");
					this.OnUserUpdatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancialIndicatorScenario_FinancialIndicator", Storage="_FinancialIndicators", ThisKey="Id", OtherKey="FinancialIndicatorScenarioId")]
		public EntitySet<FinancialIndicator> FinancialIndicators
		{
			get
			{
				return this._FinancialIndicators;
			}
			set
			{
				this._FinancialIndicators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FinancialIndicators(FinancialIndicator entity)
		{
			this.SendPropertyChanging();
			entity.FinancialIndicatorScenario = this;
		}
		
		private void detach_FinancialIndicators(FinancialIndicator entity)
		{
			this.SendPropertyChanging();
			entity.FinancialIndicatorScenario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="link.LinkFinIndicatorDiscountRate")]
	public partial class LinkFinIndicatorDiscountRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _FinancialIndicatorId;
		
		private int _DiscountRateId;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private EntityRef<DiscountRate> _DiscountRate;
		
		private EntityRef<FinancialIndicator> _FinancialIndicator;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFinancialIndicatorIdChanging(int value);
    partial void OnFinancialIndicatorIdChanged();
    partial void OnDiscountRateIdChanging(int value);
    partial void OnDiscountRateIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    #endregion
		
		public LinkFinIndicatorDiscountRate()
		{
			this._DiscountRate = default(EntityRef<DiscountRate>);
			this._FinancialIndicator = default(EntityRef<FinancialIndicator>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialIndicatorId", DbType="Int NOT NULL")]
		public int FinancialIndicatorId
		{
			get
			{
				return this._FinancialIndicatorId;
			}
			set
			{
				if ((this._FinancialIndicatorId != value))
				{
					if (this._FinancialIndicator.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinancialIndicatorIdChanging(value);
					this.SendPropertyChanging();
					this._FinancialIndicatorId = value;
					this.SendPropertyChanged("FinancialIndicatorId");
					this.OnFinancialIndicatorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountRateId", DbType="Int NOT NULL")]
		public int DiscountRateId
		{
			get
			{
				return this._DiscountRateId;
			}
			set
			{
				if ((this._DiscountRateId != value))
				{
					if (this._DiscountRate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDiscountRateIdChanging(value);
					this.SendPropertyChanging();
					this._DiscountRateId = value;
					this.SendPropertyChanged("DiscountRateId");
					this.OnDiscountRateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiscountRate_LinkFinIndicatorDiscountRate", Storage="_DiscountRate", ThisKey="DiscountRateId", OtherKey="Id", IsForeignKey=true)]
		public DiscountRate DiscountRate
		{
			get
			{
				return this._DiscountRate.Entity;
			}
			set
			{
				DiscountRate previousValue = this._DiscountRate.Entity;
				if (((previousValue != value) 
							|| (this._DiscountRate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DiscountRate.Entity = null;
						previousValue.LinkFinIndicatorDiscountRates.Remove(this);
					}
					this._DiscountRate.Entity = value;
					if ((value != null))
					{
						value.LinkFinIndicatorDiscountRates.Add(this);
						this._DiscountRateId = value.Id;
					}
					else
					{
						this._DiscountRateId = default(int);
					}
					this.SendPropertyChanged("DiscountRate");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancialIndicator_LinkFinIndicatorDiscountRate", Storage="_FinancialIndicator", ThisKey="FinancialIndicatorId", OtherKey="Id", IsForeignKey=true)]
		public FinancialIndicator FinancialIndicator
		{
			get
			{
				return this._FinancialIndicator.Entity;
			}
			set
			{
				FinancialIndicator previousValue = this._FinancialIndicator.Entity;
				if (((previousValue != value) 
							|| (this._FinancialIndicator.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinancialIndicator.Entity = null;
						previousValue.LinkFinIndicatorDiscountRates.Remove(this);
					}
					this._FinancialIndicator.Entity = value;
					if ((value != null))
					{
						value.LinkFinIndicatorDiscountRates.Add(this);
						this._FinancialIndicatorId = value.Id;
					}
					else
					{
						this._FinancialIndicatorId = default(int);
					}
					this.SendPropertyChanged("FinancialIndicator");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lookup.DiscountRates")]
	public partial class DiscountRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private decimal _DiscountRate1;
		
		private string _Description;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<int> _UserUpdatedId;
		
		private EntitySet<LinkGasPriceDiscountRate> _LinkGasPriceDiscountRates;
		
		private EntitySet<ResourceBundleAttribute> _ResourceBundleAttributes;
		
		private EntitySet<LinkFinIndicatorDiscountRate> _LinkFinIndicatorDiscountRates;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDiscountRate1Changing(decimal value);
    partial void OnDiscountRate1Changed();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnUserUpdatedIdChanging(System.Nullable<int> value);
    partial void OnUserUpdatedIdChanged();
    #endregion
		
		public DiscountRate()
		{
			this._LinkGasPriceDiscountRates = new EntitySet<LinkGasPriceDiscountRate>(new Action<LinkGasPriceDiscountRate>(this.attach_LinkGasPriceDiscountRates), new Action<LinkGasPriceDiscountRate>(this.detach_LinkGasPriceDiscountRates));
			this._ResourceBundleAttributes = new EntitySet<ResourceBundleAttribute>(new Action<ResourceBundleAttribute>(this.attach_ResourceBundleAttributes), new Action<ResourceBundleAttribute>(this.detach_ResourceBundleAttributes));
			this._LinkFinIndicatorDiscountRates = new EntitySet<LinkFinIndicatorDiscountRate>(new Action<LinkFinIndicatorDiscountRate>(this.attach_LinkFinIndicatorDiscountRates), new Action<LinkFinIndicatorDiscountRate>(this.detach_LinkFinIndicatorDiscountRates));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="DiscountRate", Storage="_DiscountRate1", DbType="Decimal(10,2) NOT NULL")]
		public decimal DiscountRate1
		{
			get
			{
				return this._DiscountRate1;
			}
			set
			{
				if ((this._DiscountRate1 != value))
				{
					this.OnDiscountRate1Changing(value);
					this.SendPropertyChanging();
					this._DiscountRate1 = value;
					this.SendPropertyChanged("DiscountRate1");
					this.OnDiscountRate1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedId", DbType="Int")]
		public System.Nullable<int> UserUpdatedId
		{
			get
			{
				return this._UserUpdatedId;
			}
			set
			{
				if ((this._UserUpdatedId != value))
				{
					this.OnUserUpdatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserUpdatedId = value;
					this.SendPropertyChanged("UserUpdatedId");
					this.OnUserUpdatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiscountRate_LinkGasPriceDiscountRate", Storage="_LinkGasPriceDiscountRates", ThisKey="Id", OtherKey="DiscountRateId")]
		public EntitySet<LinkGasPriceDiscountRate> LinkGasPriceDiscountRates
		{
			get
			{
				return this._LinkGasPriceDiscountRates;
			}
			set
			{
				this._LinkGasPriceDiscountRates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiscountRate_ResourceBundleAttribute", Storage="_ResourceBundleAttributes", ThisKey="Id", OtherKey="DiscountRateId")]
		public EntitySet<ResourceBundleAttribute> ResourceBundleAttributes
		{
			get
			{
				return this._ResourceBundleAttributes;
			}
			set
			{
				this._ResourceBundleAttributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DiscountRate_LinkFinIndicatorDiscountRate", Storage="_LinkFinIndicatorDiscountRates", ThisKey="Id", OtherKey="DiscountRateId")]
		public EntitySet<LinkFinIndicatorDiscountRate> LinkFinIndicatorDiscountRates
		{
			get
			{
				return this._LinkFinIndicatorDiscountRates;
			}
			set
			{
				this._LinkFinIndicatorDiscountRates.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LinkGasPriceDiscountRates(LinkGasPriceDiscountRate entity)
		{
			this.SendPropertyChanging();
			entity.DiscountRate = this;
		}
		
		private void detach_LinkGasPriceDiscountRates(LinkGasPriceDiscountRate entity)
		{
			this.SendPropertyChanging();
			entity.DiscountRate = null;
		}
		
		private void attach_ResourceBundleAttributes(ResourceBundleAttribute entity)
		{
			this.SendPropertyChanging();
			entity.DiscountRate = this;
		}
		
		private void detach_ResourceBundleAttributes(ResourceBundleAttribute entity)
		{
			this.SendPropertyChanging();
			entity.DiscountRate = null;
		}
		
		private void attach_LinkFinIndicatorDiscountRates(LinkFinIndicatorDiscountRate entity)
		{
			this.SendPropertyChanging();
			entity.DiscountRate = this;
		}
		
		private void detach_LinkFinIndicatorDiscountRates(LinkFinIndicatorDiscountRate entity)
		{
			this.SendPropertyChanging();
			entity.DiscountRate = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="domain.FinancialIndicators")]
	public partial class FinancialIndicator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _FinancialIndicatorTypeId;
		
		private decimal _Measure;
		
		private int _ResourceOptionAttributeId;
		
		private int _UserCreatedId;
		
		private System.Nullable<int> _UserUpdatedId;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private int _FinancialIndicatorScenarioId;
		
		private EntitySet<LinkFinIndicatorDiscountRate> _LinkFinIndicatorDiscountRates;
		
		private EntityRef<FinancialIndicatorType> _FinancialIndicatorType;
		
		private EntityRef<FinancialIndicatorScenario> _FinancialIndicatorScenario;
		
		private EntityRef<ResourceOptionAttribute> _ResourceOptionAttribute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnFinancialIndicatorTypeIdChanging(int value);
    partial void OnFinancialIndicatorTypeIdChanged();
    partial void OnMeasureChanging(decimal value);
    partial void OnMeasureChanged();
    partial void OnResourceOptionAttributeIdChanging(int value);
    partial void OnResourceOptionAttributeIdChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnUserUpdatedIdChanging(System.Nullable<int> value);
    partial void OnUserUpdatedIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnFinancialIndicatorScenarioIdChanging(int value);
    partial void OnFinancialIndicatorScenarioIdChanged();
    #endregion
		
		public FinancialIndicator()
		{
			this._LinkFinIndicatorDiscountRates = new EntitySet<LinkFinIndicatorDiscountRate>(new Action<LinkFinIndicatorDiscountRate>(this.attach_LinkFinIndicatorDiscountRates), new Action<LinkFinIndicatorDiscountRate>(this.detach_LinkFinIndicatorDiscountRates));
			this._FinancialIndicatorType = default(EntityRef<FinancialIndicatorType>);
			this._FinancialIndicatorScenario = default(EntityRef<FinancialIndicatorScenario>);
			this._ResourceOptionAttribute = default(EntityRef<ResourceOptionAttribute>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialIndicatorTypeId", DbType="Int NOT NULL")]
		public int FinancialIndicatorTypeId
		{
			get
			{
				return this._FinancialIndicatorTypeId;
			}
			set
			{
				if ((this._FinancialIndicatorTypeId != value))
				{
					if (this._FinancialIndicatorType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinancialIndicatorTypeIdChanging(value);
					this.SendPropertyChanging();
					this._FinancialIndicatorTypeId = value;
					this.SendPropertyChanged("FinancialIndicatorTypeId");
					this.OnFinancialIndicatorTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Measure", DbType="Decimal(20,10) NOT NULL")]
		public decimal Measure
		{
			get
			{
				return this._Measure;
			}
			set
			{
				if ((this._Measure != value))
				{
					this.OnMeasureChanging(value);
					this.SendPropertyChanging();
					this._Measure = value;
					this.SendPropertyChanged("Measure");
					this.OnMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceOptionAttributeId", DbType="Int NOT NULL")]
		public int ResourceOptionAttributeId
		{
			get
			{
				return this._ResourceOptionAttributeId;
			}
			set
			{
				if ((this._ResourceOptionAttributeId != value))
				{
					if (this._ResourceOptionAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceOptionAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceOptionAttributeId = value;
					this.SendPropertyChanged("ResourceOptionAttributeId");
					this.OnResourceOptionAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedId", DbType="Int")]
		public System.Nullable<int> UserUpdatedId
		{
			get
			{
				return this._UserUpdatedId;
			}
			set
			{
				if ((this._UserUpdatedId != value))
				{
					this.OnUserUpdatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserUpdatedId = value;
					this.SendPropertyChanged("UserUpdatedId");
					this.OnUserUpdatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinancialIndicatorScenarioId", DbType="Int NOT NULL")]
		public int FinancialIndicatorScenarioId
		{
			get
			{
				return this._FinancialIndicatorScenarioId;
			}
			set
			{
				if ((this._FinancialIndicatorScenarioId != value))
				{
					if (this._FinancialIndicatorScenario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFinancialIndicatorScenarioIdChanging(value);
					this.SendPropertyChanging();
					this._FinancialIndicatorScenarioId = value;
					this.SendPropertyChanged("FinancialIndicatorScenarioId");
					this.OnFinancialIndicatorScenarioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancialIndicator_LinkFinIndicatorDiscountRate", Storage="_LinkFinIndicatorDiscountRates", ThisKey="Id", OtherKey="FinancialIndicatorId")]
		public EntitySet<LinkFinIndicatorDiscountRate> LinkFinIndicatorDiscountRates
		{
			get
			{
				return this._LinkFinIndicatorDiscountRates;
			}
			set
			{
				this._LinkFinIndicatorDiscountRates.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancialIndicatorType_FinancialIndicator", Storage="_FinancialIndicatorType", ThisKey="FinancialIndicatorTypeId", OtherKey="Id", IsForeignKey=true)]
		public FinancialIndicatorType FinancialIndicatorType
		{
			get
			{
				return this._FinancialIndicatorType.Entity;
			}
			set
			{
				FinancialIndicatorType previousValue = this._FinancialIndicatorType.Entity;
				if (((previousValue != value) 
							|| (this._FinancialIndicatorType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinancialIndicatorType.Entity = null;
						previousValue.FinancialIndicators.Remove(this);
					}
					this._FinancialIndicatorType.Entity = value;
					if ((value != null))
					{
						value.FinancialIndicators.Add(this);
						this._FinancialIndicatorTypeId = value.Id;
					}
					else
					{
						this._FinancialIndicatorTypeId = default(int);
					}
					this.SendPropertyChanged("FinancialIndicatorType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FinancialIndicatorScenario_FinancialIndicator", Storage="_FinancialIndicatorScenario", ThisKey="FinancialIndicatorScenarioId", OtherKey="Id", IsForeignKey=true)]
		public FinancialIndicatorScenario FinancialIndicatorScenario
		{
			get
			{
				return this._FinancialIndicatorScenario.Entity;
			}
			set
			{
				FinancialIndicatorScenario previousValue = this._FinancialIndicatorScenario.Entity;
				if (((previousValue != value) 
							|| (this._FinancialIndicatorScenario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FinancialIndicatorScenario.Entity = null;
						previousValue.FinancialIndicators.Remove(this);
					}
					this._FinancialIndicatorScenario.Entity = value;
					if ((value != null))
					{
						value.FinancialIndicators.Add(this);
						this._FinancialIndicatorScenarioId = value.Id;
					}
					else
					{
						this._FinancialIndicatorScenarioId = default(int);
					}
					this.SendPropertyChanged("FinancialIndicatorScenario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResourceOptionAttribute_FinancialIndicator", Storage="_ResourceOptionAttribute", ThisKey="ResourceOptionAttributeId", OtherKey="Id", IsForeignKey=true)]
		public ResourceOptionAttribute ResourceOptionAttribute
		{
			get
			{
				return this._ResourceOptionAttribute.Entity;
			}
			set
			{
				ResourceOptionAttribute previousValue = this._ResourceOptionAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ResourceOptionAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResourceOptionAttribute.Entity = null;
						previousValue.FinancialIndicators.Remove(this);
					}
					this._ResourceOptionAttribute.Entity = value;
					if ((value != null))
					{
						value.FinancialIndicators.Add(this);
						this._ResourceOptionAttributeId = value.Id;
					}
					else
					{
						this._ResourceOptionAttributeId = default(int);
					}
					this.SendPropertyChanged("ResourceOptionAttribute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LinkFinIndicatorDiscountRates(LinkFinIndicatorDiscountRate entity)
		{
			this.SendPropertyChanging();
			entity.FinancialIndicator = this;
		}
		
		private void detach_LinkFinIndicatorDiscountRates(LinkFinIndicatorDiscountRate entity)
		{
			this.SendPropertyChanging();
			entity.FinancialIndicator = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="domain.EnvironmentalIndicators")]
	public partial class EnvironmentalIndicator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _EnvironmentalIndicatorTypeId;
		
		private decimal _Measure;
		
		private int _ResourceOptionAttributeId;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<int> _UserUpdatedId;
		
		private int _EnvironmentalIndicatorScenarioId;
		
		private EntityRef<EnvironmentalIndicatorType> _EnvironmentalIndicatorType;
		
		private EntityRef<EnvironmentalIndicatorScenario> _EnvironmentalIndicatorScenario;
		
		private EntityRef<ResourceOptionAttribute> _ResourceOptionAttribute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnEnvironmentalIndicatorTypeIdChanging(int value);
    partial void OnEnvironmentalIndicatorTypeIdChanged();
    partial void OnMeasureChanging(decimal value);
    partial void OnMeasureChanged();
    partial void OnResourceOptionAttributeIdChanging(int value);
    partial void OnResourceOptionAttributeIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnUserUpdatedIdChanging(System.Nullable<int> value);
    partial void OnUserUpdatedIdChanged();
    partial void OnEnvironmentalIndicatorScenarioIdChanging(int value);
    partial void OnEnvironmentalIndicatorScenarioIdChanged();
    #endregion
		
		public EnvironmentalIndicator()
		{
			this._EnvironmentalIndicatorType = default(EntityRef<EnvironmentalIndicatorType>);
			this._EnvironmentalIndicatorScenario = default(EntityRef<EnvironmentalIndicatorScenario>);
			this._ResourceOptionAttribute = default(EntityRef<ResourceOptionAttribute>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentalIndicatorTypeId", DbType="Int NOT NULL")]
		public int EnvironmentalIndicatorTypeId
		{
			get
			{
				return this._EnvironmentalIndicatorTypeId;
			}
			set
			{
				if ((this._EnvironmentalIndicatorTypeId != value))
				{
					if (this._EnvironmentalIndicatorType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnvironmentalIndicatorTypeIdChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentalIndicatorTypeId = value;
					this.SendPropertyChanged("EnvironmentalIndicatorTypeId");
					this.OnEnvironmentalIndicatorTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Measure", DbType="Decimal(20,10) NOT NULL")]
		public decimal Measure
		{
			get
			{
				return this._Measure;
			}
			set
			{
				if ((this._Measure != value))
				{
					this.OnMeasureChanging(value);
					this.SendPropertyChanging();
					this._Measure = value;
					this.SendPropertyChanged("Measure");
					this.OnMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceOptionAttributeId", DbType="Int NOT NULL")]
		public int ResourceOptionAttributeId
		{
			get
			{
				return this._ResourceOptionAttributeId;
			}
			set
			{
				if ((this._ResourceOptionAttributeId != value))
				{
					if (this._ResourceOptionAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceOptionAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceOptionAttributeId = value;
					this.SendPropertyChanged("ResourceOptionAttributeId");
					this.OnResourceOptionAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedId", DbType="Int")]
		public System.Nullable<int> UserUpdatedId
		{
			get
			{
				return this._UserUpdatedId;
			}
			set
			{
				if ((this._UserUpdatedId != value))
				{
					this.OnUserUpdatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserUpdatedId = value;
					this.SendPropertyChanged("UserUpdatedId");
					this.OnUserUpdatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentalIndicatorScenarioId", DbType="Int NOT NULL")]
		public int EnvironmentalIndicatorScenarioId
		{
			get
			{
				return this._EnvironmentalIndicatorScenarioId;
			}
			set
			{
				if ((this._EnvironmentalIndicatorScenarioId != value))
				{
					if (this._EnvironmentalIndicatorScenario.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEnvironmentalIndicatorScenarioIdChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentalIndicatorScenarioId = value;
					this.SendPropertyChanged("EnvironmentalIndicatorScenarioId");
					this.OnEnvironmentalIndicatorScenarioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnvironmentalIndicatorType_EnvironmentalIndicator", Storage="_EnvironmentalIndicatorType", ThisKey="EnvironmentalIndicatorTypeId", OtherKey="Id", IsForeignKey=true)]
		public EnvironmentalIndicatorType EnvironmentalIndicatorType
		{
			get
			{
				return this._EnvironmentalIndicatorType.Entity;
			}
			set
			{
				EnvironmentalIndicatorType previousValue = this._EnvironmentalIndicatorType.Entity;
				if (((previousValue != value) 
							|| (this._EnvironmentalIndicatorType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EnvironmentalIndicatorType.Entity = null;
						previousValue.EnvironmentalIndicators.Remove(this);
					}
					this._EnvironmentalIndicatorType.Entity = value;
					if ((value != null))
					{
						value.EnvironmentalIndicators.Add(this);
						this._EnvironmentalIndicatorTypeId = value.Id;
					}
					else
					{
						this._EnvironmentalIndicatorTypeId = default(int);
					}
					this.SendPropertyChanged("EnvironmentalIndicatorType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnvironmentalIndicatorScenario_EnvironmentalIndicator", Storage="_EnvironmentalIndicatorScenario", ThisKey="EnvironmentalIndicatorScenarioId", OtherKey="Id", IsForeignKey=true)]
		public EnvironmentalIndicatorScenario EnvironmentalIndicatorScenario
		{
			get
			{
				return this._EnvironmentalIndicatorScenario.Entity;
			}
			set
			{
				EnvironmentalIndicatorScenario previousValue = this._EnvironmentalIndicatorScenario.Entity;
				if (((previousValue != value) 
							|| (this._EnvironmentalIndicatorScenario.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EnvironmentalIndicatorScenario.Entity = null;
						previousValue.EnvironmentalIndicators.Remove(this);
					}
					this._EnvironmentalIndicatorScenario.Entity = value;
					if ((value != null))
					{
						value.EnvironmentalIndicators.Add(this);
						this._EnvironmentalIndicatorScenarioId = value.Id;
					}
					else
					{
						this._EnvironmentalIndicatorScenarioId = default(int);
					}
					this.SendPropertyChanged("EnvironmentalIndicatorScenario");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResourceOptionAttribute_EnvironmentalIndicator", Storage="_ResourceOptionAttribute", ThisKey="ResourceOptionAttributeId", OtherKey="Id", IsForeignKey=true)]
		public ResourceOptionAttribute ResourceOptionAttribute
		{
			get
			{
				return this._ResourceOptionAttribute.Entity;
			}
			set
			{
				ResourceOptionAttribute previousValue = this._ResourceOptionAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ResourceOptionAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResourceOptionAttribute.Entity = null;
						previousValue.EnvironmentalIndicators.Remove(this);
					}
					this._ResourceOptionAttribute.Entity = value;
					if ((value != null))
					{
						value.EnvironmentalIndicators.Add(this);
						this._ResourceOptionAttributeId = value.Id;
					}
					else
					{
						this._ResourceOptionAttributeId = default(int);
					}
					this.SendPropertyChanged("ResourceOptionAttribute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="domain.TechnicalIndicators")]
	public partial class TechnicalIndicator : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _TechnicalIndicatorTypeId;
		
		private decimal _Measure;
		
		private int _ResourceOptionAttributeId;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private int _UserCreatedId;
		
		private System.Nullable<int> _UserUpdatedId;
		
		private int _TechnicalIndicatorScenarioId;
		
		private EntityRef<TechnicalIndicatorType> _TechnicalIndicatorType;
		
		private EntityRef<ResourceOptionAttribute> _ResourceOptionAttribute;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTechnicalIndicatorTypeIdChanging(int value);
    partial void OnTechnicalIndicatorTypeIdChanged();
    partial void OnMeasureChanging(decimal value);
    partial void OnMeasureChanged();
    partial void OnResourceOptionAttributeIdChanging(int value);
    partial void OnResourceOptionAttributeIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnUserUpdatedIdChanging(System.Nullable<int> value);
    partial void OnUserUpdatedIdChanged();
    partial void OnTechnicalIndicatorScenarioIdChanging(int value);
    partial void OnTechnicalIndicatorScenarioIdChanged();
    #endregion
		
		public TechnicalIndicator()
		{
			this._TechnicalIndicatorType = default(EntityRef<TechnicalIndicatorType>);
			this._ResourceOptionAttribute = default(EntityRef<ResourceOptionAttribute>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalIndicatorTypeId", DbType="Int NOT NULL")]
		public int TechnicalIndicatorTypeId
		{
			get
			{
				return this._TechnicalIndicatorTypeId;
			}
			set
			{
				if ((this._TechnicalIndicatorTypeId != value))
				{
					if (this._TechnicalIndicatorType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTechnicalIndicatorTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TechnicalIndicatorTypeId = value;
					this.SendPropertyChanged("TechnicalIndicatorTypeId");
					this.OnTechnicalIndicatorTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Measure", DbType="Decimal(20,10) NOT NULL")]
		public decimal Measure
		{
			get
			{
				return this._Measure;
			}
			set
			{
				if ((this._Measure != value))
				{
					this.OnMeasureChanging(value);
					this.SendPropertyChanging();
					this._Measure = value;
					this.SendPropertyChanged("Measure");
					this.OnMeasureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceOptionAttributeId", DbType="Int NOT NULL")]
		public int ResourceOptionAttributeId
		{
			get
			{
				return this._ResourceOptionAttributeId;
			}
			set
			{
				if ((this._ResourceOptionAttributeId != value))
				{
					if (this._ResourceOptionAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceOptionAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceOptionAttributeId = value;
					this.SendPropertyChanged("ResourceOptionAttributeId");
					this.OnResourceOptionAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedId", DbType="Int")]
		public System.Nullable<int> UserUpdatedId
		{
			get
			{
				return this._UserUpdatedId;
			}
			set
			{
				if ((this._UserUpdatedId != value))
				{
					this.OnUserUpdatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserUpdatedId = value;
					this.SendPropertyChanged("UserUpdatedId");
					this.OnUserUpdatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TechnicalIndicatorScenarioId", DbType="Int NOT NULL")]
		public int TechnicalIndicatorScenarioId
		{
			get
			{
				return this._TechnicalIndicatorScenarioId;
			}
			set
			{
				if ((this._TechnicalIndicatorScenarioId != value))
				{
					this.OnTechnicalIndicatorScenarioIdChanging(value);
					this.SendPropertyChanging();
					this._TechnicalIndicatorScenarioId = value;
					this.SendPropertyChanged("TechnicalIndicatorScenarioId");
					this.OnTechnicalIndicatorScenarioIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TechnicalIndicatorType_TechnicalIndicator", Storage="_TechnicalIndicatorType", ThisKey="TechnicalIndicatorTypeId", OtherKey="Id", IsForeignKey=true)]
		public TechnicalIndicatorType TechnicalIndicatorType
		{
			get
			{
				return this._TechnicalIndicatorType.Entity;
			}
			set
			{
				TechnicalIndicatorType previousValue = this._TechnicalIndicatorType.Entity;
				if (((previousValue != value) 
							|| (this._TechnicalIndicatorType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TechnicalIndicatorType.Entity = null;
						previousValue.TechnicalIndicators.Remove(this);
					}
					this._TechnicalIndicatorType.Entity = value;
					if ((value != null))
					{
						value.TechnicalIndicators.Add(this);
						this._TechnicalIndicatorTypeId = value.Id;
					}
					else
					{
						this._TechnicalIndicatorTypeId = default(int);
					}
					this.SendPropertyChanged("TechnicalIndicatorType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResourceOptionAttribute_TechnicalIndicator", Storage="_ResourceOptionAttribute", ThisKey="ResourceOptionAttributeId", OtherKey="Id", IsForeignKey=true)]
		public ResourceOptionAttribute ResourceOptionAttribute
		{
			get
			{
				return this._ResourceOptionAttribute.Entity;
			}
			set
			{
				ResourceOptionAttribute previousValue = this._ResourceOptionAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ResourceOptionAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResourceOptionAttribute.Entity = null;
						previousValue.TechnicalIndicators.Remove(this);
					}
					this._ResourceOptionAttribute.Entity = value;
					if ((value != null))
					{
						value.TechnicalIndicators.Add(this);
						this._ResourceOptionAttributeId = value.Id;
					}
					else
					{
						this._ResourceOptionAttributeId = default(int);
					}
					this.SendPropertyChanged("ResourceOptionAttribute");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lookup.EnvironmentalIndicatorTypes")]
	public partial class EnvironmentalIndicatorType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Abbreviation;
		
		private string _Label;
		
		private string _Description;
		
		private string _UnitOfMeasurement;
		
		private int _Index;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private bool _Readonly;
		
		private string _Subtype;
		
		private System.Nullable<int> _SourceColumn;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<int> _UserUpdatedId;
		
		private EntitySet<EnvironmentalIndicator> _EnvironmentalIndicators;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAbbreviationChanging(string value);
    partial void OnAbbreviationChanged();
    partial void OnLabelChanging(string value);
    partial void OnLabelChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUnitOfMeasurementChanging(string value);
    partial void OnUnitOfMeasurementChanged();
    partial void OnIndexChanging(int value);
    partial void OnIndexChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnReadonlyChanging(bool value);
    partial void OnReadonlyChanged();
    partial void OnSubtypeChanging(string value);
    partial void OnSubtypeChanged();
    partial void OnSourceColumnChanging(System.Nullable<int> value);
    partial void OnSourceColumnChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnUserUpdatedIdChanging(System.Nullable<int> value);
    partial void OnUserUpdatedIdChanged();
    #endregion
		
		public EnvironmentalIndicatorType()
		{
			this._EnvironmentalIndicators = new EntitySet<EnvironmentalIndicator>(new Action<EnvironmentalIndicator>(this.attach_EnvironmentalIndicators), new Action<EnvironmentalIndicator>(this.detach_EnvironmentalIndicators));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Abbreviation", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Abbreviation
		{
			get
			{
				return this._Abbreviation;
			}
			set
			{
				if ((this._Abbreviation != value))
				{
					this.OnAbbreviationChanging(value);
					this.SendPropertyChanging();
					this._Abbreviation = value;
					this.SendPropertyChanged("Abbreviation");
					this.OnAbbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitOfMeasurement", DbType="NVarChar(256)")]
		public string UnitOfMeasurement
		{
			get
			{
				return this._UnitOfMeasurement;
			}
			set
			{
				if ((this._UnitOfMeasurement != value))
				{
					this.OnUnitOfMeasurementChanging(value);
					this.SendPropertyChanging();
					this._UnitOfMeasurement = value;
					this.SendPropertyChanged("UnitOfMeasurement");
					this.OnUnitOfMeasurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Index]", Storage="_Index", DbType="Int NOT NULL")]
		public int Index
		{
			get
			{
				return this._Index;
			}
			set
			{
				if ((this._Index != value))
				{
					this.OnIndexChanging(value);
					this.SendPropertyChanging();
					this._Index = value;
					this.SendPropertyChanged("Index");
					this.OnIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Readonly", DbType="Bit NOT NULL")]
		public bool Readonly
		{
			get
			{
				return this._Readonly;
			}
			set
			{
				if ((this._Readonly != value))
				{
					this.OnReadonlyChanging(value);
					this.SendPropertyChanging();
					this._Readonly = value;
					this.SendPropertyChanged("Readonly");
					this.OnReadonlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subtype", DbType="NVarChar(256)")]
		public string Subtype
		{
			get
			{
				return this._Subtype;
			}
			set
			{
				if ((this._Subtype != value))
				{
					this.OnSubtypeChanging(value);
					this.SendPropertyChanging();
					this._Subtype = value;
					this.SendPropertyChanged("Subtype");
					this.OnSubtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceColumn", DbType="Int")]
		public System.Nullable<int> SourceColumn
		{
			get
			{
				return this._SourceColumn;
			}
			set
			{
				if ((this._SourceColumn != value))
				{
					this.OnSourceColumnChanging(value);
					this.SendPropertyChanging();
					this._SourceColumn = value;
					this.SendPropertyChanged("SourceColumn");
					this.OnSourceColumnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedId", DbType="Int")]
		public System.Nullable<int> UserUpdatedId
		{
			get
			{
				return this._UserUpdatedId;
			}
			set
			{
				if ((this._UserUpdatedId != value))
				{
					this.OnUserUpdatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserUpdatedId = value;
					this.SendPropertyChanged("UserUpdatedId");
					this.OnUserUpdatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnvironmentalIndicatorType_EnvironmentalIndicator", Storage="_EnvironmentalIndicators", ThisKey="Id", OtherKey="EnvironmentalIndicatorTypeId")]
		public EntitySet<EnvironmentalIndicator> EnvironmentalIndicators
		{
			get
			{
				return this._EnvironmentalIndicators;
			}
			set
			{
				this._EnvironmentalIndicators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EnvironmentalIndicators(EnvironmentalIndicator entity)
		{
			this.SendPropertyChanging();
			entity.EnvironmentalIndicatorType = this;
		}
		
		private void detach_EnvironmentalIndicators(EnvironmentalIndicator entity)
		{
			this.SendPropertyChanging();
			entity.EnvironmentalIndicatorType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lookup.EnvironmentalIndicatorScenarios")]
	public partial class EnvironmentalIndicatorScenario : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Code;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<int> _UserUpdatedId;
		
		private EntitySet<EnvironmentalIndicator> _EnvironmentalIndicators;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnUserUpdatedIdChanging(System.Nullable<int> value);
    partial void OnUserUpdatedIdChanged();
    #endregion
		
		public EnvironmentalIndicatorScenario()
		{
			this._EnvironmentalIndicators = new EntitySet<EnvironmentalIndicator>(new Action<EnvironmentalIndicator>(this.attach_EnvironmentalIndicators), new Action<EnvironmentalIndicator>(this.detach_EnvironmentalIndicators));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedId", DbType="Int")]
		public System.Nullable<int> UserUpdatedId
		{
			get
			{
				return this._UserUpdatedId;
			}
			set
			{
				if ((this._UserUpdatedId != value))
				{
					this.OnUserUpdatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserUpdatedId = value;
					this.SendPropertyChanged("UserUpdatedId");
					this.OnUserUpdatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EnvironmentalIndicatorScenario_EnvironmentalIndicator", Storage="_EnvironmentalIndicators", ThisKey="Id", OtherKey="EnvironmentalIndicatorScenarioId")]
		public EntitySet<EnvironmentalIndicator> EnvironmentalIndicators
		{
			get
			{
				return this._EnvironmentalIndicators;
			}
			set
			{
				this._EnvironmentalIndicators.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EnvironmentalIndicators(EnvironmentalIndicator entity)
		{
			this.SendPropertyChanging();
			entity.EnvironmentalIndicatorScenario = this;
		}
		
		private void detach_EnvironmentalIndicators(EnvironmentalIndicator entity)
		{
			this.SendPropertyChanging();
			entity.EnvironmentalIndicatorScenario = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="link.LinkResourceOptionMapDefinition")]
	public partial class LinkResourceOptionMapDefinition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ElectricalGroupId;
		
		private int _ResourceOptionId;
		
		private System.Nullable<long> _DateCreated;
		
		private System.Nullable<int> _UserCreatedId;
		
		private EntityRef<ElectricalGroup> _ElectricalGroup;
		
		private EntityRef<ResourceOption> _ResourceOption;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnElectricalGroupIdChanging(int value);
    partial void OnElectricalGroupIdChanged();
    partial void OnResourceOptionIdChanging(int value);
    partial void OnResourceOptionIdChanged();
    partial void OnDateCreatedChanging(System.Nullable<long> value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(System.Nullable<int> value);
    partial void OnUserCreatedIdChanged();
    #endregion
		
		public LinkResourceOptionMapDefinition()
		{
			this._ElectricalGroup = default(EntityRef<ElectricalGroup>);
			this._ResourceOption = default(EntityRef<ResourceOption>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElectricalGroupId", DbType="Int NOT NULL")]
		public int ElectricalGroupId
		{
			get
			{
				return this._ElectricalGroupId;
			}
			set
			{
				if ((this._ElectricalGroupId != value))
				{
					if (this._ElectricalGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnElectricalGroupIdChanging(value);
					this.SendPropertyChanging();
					this._ElectricalGroupId = value;
					this.SendPropertyChanged("ElectricalGroupId");
					this.OnElectricalGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceOptionId", DbType="Int NOT NULL")]
		public int ResourceOptionId
		{
			get
			{
				return this._ResourceOptionId;
			}
			set
			{
				if ((this._ResourceOptionId != value))
				{
					if (this._ResourceOption.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceOptionIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceOptionId = value;
					this.SendPropertyChanged("ResourceOptionId");
					this.OnResourceOptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="BigInt")]
		public System.Nullable<long> DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int")]
		public System.Nullable<int> UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ElectricalGroup_LinkResourceOptionMapDefinition", Storage="_ElectricalGroup", ThisKey="ElectricalGroupId", OtherKey="Id", IsForeignKey=true)]
		public ElectricalGroup ElectricalGroup
		{
			get
			{
				return this._ElectricalGroup.Entity;
			}
			set
			{
				ElectricalGroup previousValue = this._ElectricalGroup.Entity;
				if (((previousValue != value) 
							|| (this._ElectricalGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ElectricalGroup.Entity = null;
						previousValue.LinkResourceOptionMapDefinitions.Remove(this);
					}
					this._ElectricalGroup.Entity = value;
					if ((value != null))
					{
						value.LinkResourceOptionMapDefinitions.Add(this);
						this._ElectricalGroupId = value.Id;
					}
					else
					{
						this._ElectricalGroupId = default(int);
					}
					this.SendPropertyChanged("ElectricalGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResourceOption_LinkResourceOptionMapDefinition", Storage="_ResourceOption", ThisKey="ResourceOptionId", OtherKey="Id", IsForeignKey=true)]
		public ResourceOption ResourceOption
		{
			get
			{
				return this._ResourceOption.Entity;
			}
			set
			{
				ResourceOption previousValue = this._ResourceOption.Entity;
				if (((previousValue != value) 
							|| (this._ResourceOption.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResourceOption.Entity = null;
						previousValue.LinkResourceOptionMapDefinitions.Remove(this);
					}
					this._ResourceOption.Entity = value;
					if ((value != null))
					{
						value.LinkResourceOptionMapDefinitions.Add(this);
						this._ResourceOptionId = value.Id;
					}
					else
					{
						this._ResourceOptionId = default(int);
					}
					this.SendPropertyChanged("ResourceOption");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="domain.ResourceOptions")]
	public partial class ResourceOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _UserCreatedId;
		
		private System.DateTime _DateCreated;
		
		private System.Nullable<int> _UserUpdatedId;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<int> _ConfidentialityId;
		
		private System.Nullable<int> _FuelTypeId;
		
		private string _Comments;
		
		private System.Nullable<decimal> _Latitude;
		
		private System.Nullable<decimal> _Longitude;
		
		private string _ResourceType;
		
		private EntitySet<LinkResourceOptionMapDefinition> _LinkResourceOptionMapDefinitions;
		
		private EntitySet<ResourceOptionAttribute> _ResourceOptionAttributes;
		
		private EntityRef<FuelType> _FuelType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserUpdatedIdChanging(System.Nullable<int> value);
    partial void OnUserUpdatedIdChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnConfidentialityIdChanging(System.Nullable<int> value);
    partial void OnConfidentialityIdChanged();
    partial void OnFuelTypeIdChanging(System.Nullable<int> value);
    partial void OnFuelTypeIdChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnLatitudeChanging(System.Nullable<decimal> value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(System.Nullable<decimal> value);
    partial void OnLongitudeChanged();
    partial void OnResourceTypeChanging(string value);
    partial void OnResourceTypeChanged();
    #endregion
		
		public ResourceOption()
		{
			this._LinkResourceOptionMapDefinitions = new EntitySet<LinkResourceOptionMapDefinition>(new Action<LinkResourceOptionMapDefinition>(this.attach_LinkResourceOptionMapDefinitions), new Action<LinkResourceOptionMapDefinition>(this.detach_LinkResourceOptionMapDefinitions));
			this._ResourceOptionAttributes = new EntitySet<ResourceOptionAttribute>(new Action<ResourceOptionAttribute>(this.attach_ResourceOptionAttributes), new Action<ResourceOptionAttribute>(this.detach_ResourceOptionAttributes));
			this._FuelType = default(EntityRef<FuelType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedId", DbType="Int")]
		public System.Nullable<int> UserUpdatedId
		{
			get
			{
				return this._UserUpdatedId;
			}
			set
			{
				if ((this._UserUpdatedId != value))
				{
					this.OnUserUpdatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserUpdatedId = value;
					this.SendPropertyChanged("UserUpdatedId");
					this.OnUserUpdatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConfidentialityId", DbType="Int")]
		public System.Nullable<int> ConfidentialityId
		{
			get
			{
				return this._ConfidentialityId;
			}
			set
			{
				if ((this._ConfidentialityId != value))
				{
					this.OnConfidentialityIdChanging(value);
					this.SendPropertyChanging();
					this._ConfidentialityId = value;
					this.SendPropertyChanged("ConfidentialityId");
					this.OnConfidentialityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelTypeId", DbType="Int")]
		public System.Nullable<int> FuelTypeId
		{
			get
			{
				return this._FuelTypeId;
			}
			set
			{
				if ((this._FuelTypeId != value))
				{
					if (this._FuelType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnFuelTypeIdChanging(value);
					this.SendPropertyChanging();
					this._FuelTypeId = value;
					this.SendPropertyChanged("FuelTypeId");
					this.OnFuelTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="NVarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Decimal(20,10)")]
		public System.Nullable<decimal> Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Decimal(20,10)")]
		public System.Nullable<decimal> Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceType", DbType="NVarChar(256)")]
		public string ResourceType
		{
			get
			{
				return this._ResourceType;
			}
			set
			{
				if ((this._ResourceType != value))
				{
					this.OnResourceTypeChanging(value);
					this.SendPropertyChanging();
					this._ResourceType = value;
					this.SendPropertyChanged("ResourceType");
					this.OnResourceTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResourceOption_LinkResourceOptionMapDefinition", Storage="_LinkResourceOptionMapDefinitions", ThisKey="Id", OtherKey="ResourceOptionId")]
		public EntitySet<LinkResourceOptionMapDefinition> LinkResourceOptionMapDefinitions
		{
			get
			{
				return this._LinkResourceOptionMapDefinitions;
			}
			set
			{
				this._LinkResourceOptionMapDefinitions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResourceOption_ResourceOptionAttribute", Storage="_ResourceOptionAttributes", ThisKey="Id", OtherKey="ResourceOptionId")]
		public EntitySet<ResourceOptionAttribute> ResourceOptionAttributes
		{
			get
			{
				return this._ResourceOptionAttributes;
			}
			set
			{
				this._ResourceOptionAttributes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FuelType_ResourceOption", Storage="_FuelType", ThisKey="FuelTypeId", OtherKey="Id", IsForeignKey=true)]
		public FuelType FuelType
		{
			get
			{
				return this._FuelType.Entity;
			}
			set
			{
				FuelType previousValue = this._FuelType.Entity;
				if (((previousValue != value) 
							|| (this._FuelType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FuelType.Entity = null;
						previousValue.ResourceOptions.Remove(this);
					}
					this._FuelType.Entity = value;
					if ((value != null))
					{
						value.ResourceOptions.Add(this);
						this._FuelTypeId = value.Id;
					}
					else
					{
						this._FuelTypeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("FuelType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LinkResourceOptionMapDefinitions(LinkResourceOptionMapDefinition entity)
		{
			this.SendPropertyChanging();
			entity.ResourceOption = this;
		}
		
		private void detach_LinkResourceOptionMapDefinitions(LinkResourceOptionMapDefinition entity)
		{
			this.SendPropertyChanging();
			entity.ResourceOption = null;
		}
		
		private void attach_ResourceOptionAttributes(ResourceOptionAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ResourceOption = this;
		}
		
		private void detach_ResourceOptionAttributes(ResourceOptionAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ResourceOption = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="domain.ResourceOptionAttributes")]
	public partial class ResourceOptionAttribute : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _DataSourceId;
		
		private string _MataId;
		
		private System.Nullable<int> _OwnershipId;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private int _ResourceOptionId;
		
		private System.Nullable<int> _EnergyAvailableYear;
		
		private System.Nullable<int> _LevelOfStudyId;
		
		private System.Nullable<int> _DevelopmentRiskId;
		
		private string _DevelopmentRiskComment;
		
		private System.Nullable<int> _PriceRiskId;
		
		private string _PriceRiskComments;
		
		private System.Nullable<int> _ScreenCriteriaTypeId;
		
		private System.Nullable<bool> _RequiredToMapa;
		
		private System.Nullable<int> _ResourceBundleAttributeId;
		
		private System.Nullable<int> _TaxId;
		
		private System.Nullable<int> _ResourceTypeUncertaintyId;
		
		private System.Nullable<int> _CostUncertainityId;
		
		private System.Nullable<bool> _SentToSysOptiimizer;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<int> _UserUpdatedId;
		
		private EntitySet<EconomicIndicator> _EconomicIndicators;
		
		private EntitySet<FinancialIndicator> _FinancialIndicators;
		
		private EntitySet<EnvironmentalIndicator> _EnvironmentalIndicators;
		
		private EntitySet<TechnicalIndicator> _TechnicalIndicators;
		
		private EntityRef<DataSource> _DataSource;
		
		private EntityRef<ResourceBundleAttribute> _ResourceBundleAttribute;
		
		private EntityRef<ResourceOption> _ResourceOption;
		
		private EntityRef<CostUncertainty> _CostUncertainty;
		
		private EntityRef<ResourceTypeUncertainty> _ResourceTypeUncertainty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDataSourceIdChanging(System.Nullable<int> value);
    partial void OnDataSourceIdChanged();
    partial void OnMataIdChanging(string value);
    partial void OnMataIdChanged();
    partial void OnOwnershipIdChanging(System.Nullable<int> value);
    partial void OnOwnershipIdChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnResourceOptionIdChanging(int value);
    partial void OnResourceOptionIdChanged();
    partial void OnEnergyAvailableYearChanging(System.Nullable<int> value);
    partial void OnEnergyAvailableYearChanged();
    partial void OnLevelOfStudyIdChanging(System.Nullable<int> value);
    partial void OnLevelOfStudyIdChanged();
    partial void OnDevelopmentRiskIdChanging(System.Nullable<int> value);
    partial void OnDevelopmentRiskIdChanged();
    partial void OnDevelopmentRiskCommentChanging(string value);
    partial void OnDevelopmentRiskCommentChanged();
    partial void OnPriceRiskIdChanging(System.Nullable<int> value);
    partial void OnPriceRiskIdChanged();
    partial void OnPriceRiskCommentsChanging(string value);
    partial void OnPriceRiskCommentsChanged();
    partial void OnScreenCriteriaTypeIdChanging(System.Nullable<int> value);
    partial void OnScreenCriteriaTypeIdChanged();
    partial void OnRequiredToMapaChanging(System.Nullable<bool> value);
    partial void OnRequiredToMapaChanged();
    partial void OnResourceBundleAttributeIdChanging(System.Nullable<int> value);
    partial void OnResourceBundleAttributeIdChanged();
    partial void OnTaxIdChanging(System.Nullable<int> value);
    partial void OnTaxIdChanged();
    partial void OnResourceTypeUncertaintyIdChanging(System.Nullable<int> value);
    partial void OnResourceTypeUncertaintyIdChanged();
    partial void OnCostUncertainityIdChanging(System.Nullable<int> value);
    partial void OnCostUncertainityIdChanged();
    partial void OnSentToSysOptiimizerChanging(System.Nullable<bool> value);
    partial void OnSentToSysOptiimizerChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnUserUpdatedIdChanging(System.Nullable<int> value);
    partial void OnUserUpdatedIdChanged();
    #endregion
		
		public ResourceOptionAttribute()
		{
			this._EconomicIndicators = new EntitySet<EconomicIndicator>(new Action<EconomicIndicator>(this.attach_EconomicIndicators), new Action<EconomicIndicator>(this.detach_EconomicIndicators));
			this._FinancialIndicators = new EntitySet<FinancialIndicator>(new Action<FinancialIndicator>(this.attach_FinancialIndicators), new Action<FinancialIndicator>(this.detach_FinancialIndicators));
			this._EnvironmentalIndicators = new EntitySet<EnvironmentalIndicator>(new Action<EnvironmentalIndicator>(this.attach_EnvironmentalIndicators), new Action<EnvironmentalIndicator>(this.detach_EnvironmentalIndicators));
			this._TechnicalIndicators = new EntitySet<TechnicalIndicator>(new Action<TechnicalIndicator>(this.attach_TechnicalIndicators), new Action<TechnicalIndicator>(this.detach_TechnicalIndicators));
			this._DataSource = default(EntityRef<DataSource>);
			this._ResourceBundleAttribute = default(EntityRef<ResourceBundleAttribute>);
			this._ResourceOption = default(EntityRef<ResourceOption>);
			this._CostUncertainty = default(EntityRef<CostUncertainty>);
			this._ResourceTypeUncertainty = default(EntityRef<ResourceTypeUncertainty>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSourceId", DbType="Int")]
		public System.Nullable<int> DataSourceId
		{
			get
			{
				return this._DataSourceId;
			}
			set
			{
				if ((this._DataSourceId != value))
				{
					if (this._DataSource.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDataSourceIdChanging(value);
					this.SendPropertyChanging();
					this._DataSourceId = value;
					this.SendPropertyChanged("DataSourceId");
					this.OnDataSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MataId", DbType="NVarChar(256)")]
		public string MataId
		{
			get
			{
				return this._MataId;
			}
			set
			{
				if ((this._MataId != value))
				{
					this.OnMataIdChanging(value);
					this.SendPropertyChanging();
					this._MataId = value;
					this.SendPropertyChanged("MataId");
					this.OnMataIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnershipId", DbType="Int")]
		public System.Nullable<int> OwnershipId
		{
			get
			{
				return this._OwnershipId;
			}
			set
			{
				if ((this._OwnershipId != value))
				{
					this.OnOwnershipIdChanging(value);
					this.SendPropertyChanging();
					this._OwnershipId = value;
					this.SendPropertyChanged("OwnershipId");
					this.OnOwnershipIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceOptionId", DbType="Int NOT NULL")]
		public int ResourceOptionId
		{
			get
			{
				return this._ResourceOptionId;
			}
			set
			{
				if ((this._ResourceOptionId != value))
				{
					if (this._ResourceOption.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceOptionIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceOptionId = value;
					this.SendPropertyChanged("ResourceOptionId");
					this.OnResourceOptionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnergyAvailableYear", DbType="Int")]
		public System.Nullable<int> EnergyAvailableYear
		{
			get
			{
				return this._EnergyAvailableYear;
			}
			set
			{
				if ((this._EnergyAvailableYear != value))
				{
					this.OnEnergyAvailableYearChanging(value);
					this.SendPropertyChanging();
					this._EnergyAvailableYear = value;
					this.SendPropertyChanged("EnergyAvailableYear");
					this.OnEnergyAvailableYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelOfStudyId", DbType="Int")]
		public System.Nullable<int> LevelOfStudyId
		{
			get
			{
				return this._LevelOfStudyId;
			}
			set
			{
				if ((this._LevelOfStudyId != value))
				{
					this.OnLevelOfStudyIdChanging(value);
					this.SendPropertyChanging();
					this._LevelOfStudyId = value;
					this.SendPropertyChanged("LevelOfStudyId");
					this.OnLevelOfStudyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DevelopmentRiskId", DbType="Int")]
		public System.Nullable<int> DevelopmentRiskId
		{
			get
			{
				return this._DevelopmentRiskId;
			}
			set
			{
				if ((this._DevelopmentRiskId != value))
				{
					this.OnDevelopmentRiskIdChanging(value);
					this.SendPropertyChanging();
					this._DevelopmentRiskId = value;
					this.SendPropertyChanged("DevelopmentRiskId");
					this.OnDevelopmentRiskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DevelopmentRiskComment", DbType="NVarChar(MAX)")]
		public string DevelopmentRiskComment
		{
			get
			{
				return this._DevelopmentRiskComment;
			}
			set
			{
				if ((this._DevelopmentRiskComment != value))
				{
					this.OnDevelopmentRiskCommentChanging(value);
					this.SendPropertyChanging();
					this._DevelopmentRiskComment = value;
					this.SendPropertyChanged("DevelopmentRiskComment");
					this.OnDevelopmentRiskCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceRiskId", DbType="Int")]
		public System.Nullable<int> PriceRiskId
		{
			get
			{
				return this._PriceRiskId;
			}
			set
			{
				if ((this._PriceRiskId != value))
				{
					this.OnPriceRiskIdChanging(value);
					this.SendPropertyChanging();
					this._PriceRiskId = value;
					this.SendPropertyChanged("PriceRiskId");
					this.OnPriceRiskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceRiskComments", DbType="NVarChar(MAX)")]
		public string PriceRiskComments
		{
			get
			{
				return this._PriceRiskComments;
			}
			set
			{
				if ((this._PriceRiskComments != value))
				{
					this.OnPriceRiskCommentsChanging(value);
					this.SendPropertyChanging();
					this._PriceRiskComments = value;
					this.SendPropertyChanged("PriceRiskComments");
					this.OnPriceRiskCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenCriteriaTypeId", DbType="Int")]
		public System.Nullable<int> ScreenCriteriaTypeId
		{
			get
			{
				return this._ScreenCriteriaTypeId;
			}
			set
			{
				if ((this._ScreenCriteriaTypeId != value))
				{
					this.OnScreenCriteriaTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ScreenCriteriaTypeId = value;
					this.SendPropertyChanged("ScreenCriteriaTypeId");
					this.OnScreenCriteriaTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequiredToMapa", DbType="Bit")]
		public System.Nullable<bool> RequiredToMapa
		{
			get
			{
				return this._RequiredToMapa;
			}
			set
			{
				if ((this._RequiredToMapa != value))
				{
					this.OnRequiredToMapaChanging(value);
					this.SendPropertyChanging();
					this._RequiredToMapa = value;
					this.SendPropertyChanged("RequiredToMapa");
					this.OnRequiredToMapaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceBundleAttributeId", DbType="Int")]
		public System.Nullable<int> ResourceBundleAttributeId
		{
			get
			{
				return this._ResourceBundleAttributeId;
			}
			set
			{
				if ((this._ResourceBundleAttributeId != value))
				{
					if (this._ResourceBundleAttribute.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceBundleAttributeIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceBundleAttributeId = value;
					this.SendPropertyChanged("ResourceBundleAttributeId");
					this.OnResourceBundleAttributeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxId", DbType="Int")]
		public System.Nullable<int> TaxId
		{
			get
			{
				return this._TaxId;
			}
			set
			{
				if ((this._TaxId != value))
				{
					this.OnTaxIdChanging(value);
					this.SendPropertyChanging();
					this._TaxId = value;
					this.SendPropertyChanged("TaxId");
					this.OnTaxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceTypeUncertaintyId", DbType="Int")]
		public System.Nullable<int> ResourceTypeUncertaintyId
		{
			get
			{
				return this._ResourceTypeUncertaintyId;
			}
			set
			{
				if ((this._ResourceTypeUncertaintyId != value))
				{
					if (this._ResourceTypeUncertainty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnResourceTypeUncertaintyIdChanging(value);
					this.SendPropertyChanging();
					this._ResourceTypeUncertaintyId = value;
					this.SendPropertyChanged("ResourceTypeUncertaintyId");
					this.OnResourceTypeUncertaintyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostUncertainityId", DbType="Int")]
		public System.Nullable<int> CostUncertainityId
		{
			get
			{
				return this._CostUncertainityId;
			}
			set
			{
				if ((this._CostUncertainityId != value))
				{
					if (this._CostUncertainty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCostUncertainityIdChanging(value);
					this.SendPropertyChanging();
					this._CostUncertainityId = value;
					this.SendPropertyChanged("CostUncertainityId");
					this.OnCostUncertainityIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SentToSysOptiimizer", DbType="Bit")]
		public System.Nullable<bool> SentToSysOptiimizer
		{
			get
			{
				return this._SentToSysOptiimizer;
			}
			set
			{
				if ((this._SentToSysOptiimizer != value))
				{
					this.OnSentToSysOptiimizerChanging(value);
					this.SendPropertyChanging();
					this._SentToSysOptiimizer = value;
					this.SendPropertyChanged("SentToSysOptiimizer");
					this.OnSentToSysOptiimizerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedId", DbType="Int")]
		public System.Nullable<int> UserUpdatedId
		{
			get
			{
				return this._UserUpdatedId;
			}
			set
			{
				if ((this._UserUpdatedId != value))
				{
					this.OnUserUpdatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserUpdatedId = value;
					this.SendPropertyChanged("UserUpdatedId");
					this.OnUserUpdatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResourceOptionAttribute_EconomicIndicator", Storage="_EconomicIndicators", ThisKey="Id", OtherKey="ResourceOptionAttributeId")]
		public EntitySet<EconomicIndicator> EconomicIndicators
		{
			get
			{
				return this._EconomicIndicators;
			}
			set
			{
				this._EconomicIndicators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResourceOptionAttribute_FinancialIndicator", Storage="_FinancialIndicators", ThisKey="Id", OtherKey="ResourceOptionAttributeId")]
		public EntitySet<FinancialIndicator> FinancialIndicators
		{
			get
			{
				return this._FinancialIndicators;
			}
			set
			{
				this._FinancialIndicators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResourceOptionAttribute_EnvironmentalIndicator", Storage="_EnvironmentalIndicators", ThisKey="Id", OtherKey="ResourceOptionAttributeId")]
		public EntitySet<EnvironmentalIndicator> EnvironmentalIndicators
		{
			get
			{
				return this._EnvironmentalIndicators;
			}
			set
			{
				this._EnvironmentalIndicators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResourceOptionAttribute_TechnicalIndicator", Storage="_TechnicalIndicators", ThisKey="Id", OtherKey="ResourceOptionAttributeId")]
		public EntitySet<TechnicalIndicator> TechnicalIndicators
		{
			get
			{
				return this._TechnicalIndicators;
			}
			set
			{
				this._TechnicalIndicators.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DataSource_ResourceOptionAttribute", Storage="_DataSource", ThisKey="DataSourceId", OtherKey="Id", IsForeignKey=true)]
		public DataSource DataSource
		{
			get
			{
				return this._DataSource.Entity;
			}
			set
			{
				DataSource previousValue = this._DataSource.Entity;
				if (((previousValue != value) 
							|| (this._DataSource.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DataSource.Entity = null;
						previousValue.ResourceOptionAttributes.Remove(this);
					}
					this._DataSource.Entity = value;
					if ((value != null))
					{
						value.ResourceOptionAttributes.Add(this);
						this._DataSourceId = value.Id;
					}
					else
					{
						this._DataSourceId = default(Nullable<int>);
					}
					this.SendPropertyChanged("DataSource");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResourceBundleAttribute_ResourceOptionAttribute", Storage="_ResourceBundleAttribute", ThisKey="ResourceBundleAttributeId", OtherKey="Id", IsForeignKey=true)]
		public ResourceBundleAttribute ResourceBundleAttribute
		{
			get
			{
				return this._ResourceBundleAttribute.Entity;
			}
			set
			{
				ResourceBundleAttribute previousValue = this._ResourceBundleAttribute.Entity;
				if (((previousValue != value) 
							|| (this._ResourceBundleAttribute.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResourceBundleAttribute.Entity = null;
						previousValue.ResourceOptionAttributes.Remove(this);
					}
					this._ResourceBundleAttribute.Entity = value;
					if ((value != null))
					{
						value.ResourceOptionAttributes.Add(this);
						this._ResourceBundleAttributeId = value.Id;
					}
					else
					{
						this._ResourceBundleAttributeId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ResourceBundleAttribute");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResourceOption_ResourceOptionAttribute", Storage="_ResourceOption", ThisKey="ResourceOptionId", OtherKey="Id", IsForeignKey=true)]
		public ResourceOption ResourceOption
		{
			get
			{
				return this._ResourceOption.Entity;
			}
			set
			{
				ResourceOption previousValue = this._ResourceOption.Entity;
				if (((previousValue != value) 
							|| (this._ResourceOption.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResourceOption.Entity = null;
						previousValue.ResourceOptionAttributes.Remove(this);
					}
					this._ResourceOption.Entity = value;
					if ((value != null))
					{
						value.ResourceOptionAttributes.Add(this);
						this._ResourceOptionId = value.Id;
					}
					else
					{
						this._ResourceOptionId = default(int);
					}
					this.SendPropertyChanged("ResourceOption");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostUncertainty_ResourceOptionAttribute", Storage="_CostUncertainty", ThisKey="CostUncertainityId", OtherKey="Id", IsForeignKey=true)]
		public CostUncertainty CostUncertainty
		{
			get
			{
				return this._CostUncertainty.Entity;
			}
			set
			{
				CostUncertainty previousValue = this._CostUncertainty.Entity;
				if (((previousValue != value) 
							|| (this._CostUncertainty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CostUncertainty.Entity = null;
						previousValue.ResourceOptionAttributes.Remove(this);
					}
					this._CostUncertainty.Entity = value;
					if ((value != null))
					{
						value.ResourceOptionAttributes.Add(this);
						this._CostUncertainityId = value.Id;
					}
					else
					{
						this._CostUncertainityId = default(Nullable<int>);
					}
					this.SendPropertyChanged("CostUncertainty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResourceTypeUncertainty_ResourceOptionAttribute", Storage="_ResourceTypeUncertainty", ThisKey="ResourceTypeUncertaintyId", OtherKey="Id", IsForeignKey=true)]
		public ResourceTypeUncertainty ResourceTypeUncertainty
		{
			get
			{
				return this._ResourceTypeUncertainty.Entity;
			}
			set
			{
				ResourceTypeUncertainty previousValue = this._ResourceTypeUncertainty.Entity;
				if (((previousValue != value) 
							|| (this._ResourceTypeUncertainty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ResourceTypeUncertainty.Entity = null;
						previousValue.ResourceOptionAttributes.Remove(this);
					}
					this._ResourceTypeUncertainty.Entity = value;
					if ((value != null))
					{
						value.ResourceOptionAttributes.Add(this);
						this._ResourceTypeUncertaintyId = value.Id;
					}
					else
					{
						this._ResourceTypeUncertaintyId = default(Nullable<int>);
					}
					this.SendPropertyChanged("ResourceTypeUncertainty");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EconomicIndicators(EconomicIndicator entity)
		{
			this.SendPropertyChanging();
			entity.ResourceOptionAttribute = this;
		}
		
		private void detach_EconomicIndicators(EconomicIndicator entity)
		{
			this.SendPropertyChanging();
			entity.ResourceOptionAttribute = null;
		}
		
		private void attach_FinancialIndicators(FinancialIndicator entity)
		{
			this.SendPropertyChanging();
			entity.ResourceOptionAttribute = this;
		}
		
		private void detach_FinancialIndicators(FinancialIndicator entity)
		{
			this.SendPropertyChanging();
			entity.ResourceOptionAttribute = null;
		}
		
		private void attach_EnvironmentalIndicators(EnvironmentalIndicator entity)
		{
			this.SendPropertyChanging();
			entity.ResourceOptionAttribute = this;
		}
		
		private void detach_EnvironmentalIndicators(EnvironmentalIndicator entity)
		{
			this.SendPropertyChanging();
			entity.ResourceOptionAttribute = null;
		}
		
		private void attach_TechnicalIndicators(TechnicalIndicator entity)
		{
			this.SendPropertyChanging();
			entity.ResourceOptionAttribute = this;
		}
		
		private void detach_TechnicalIndicators(TechnicalIndicator entity)
		{
			this.SendPropertyChanging();
			entity.ResourceOptionAttribute = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lookup.CostUncertainties")]
	public partial class CostUncertainty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Code;
		
		private string _Description;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<int> _UserUpdatedId;
		
		private EntitySet<ResourceOptionAttribute> _ResourceOptionAttributes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnUserUpdatedIdChanging(System.Nullable<int> value);
    partial void OnUserUpdatedIdChanged();
    #endregion
		
		public CostUncertainty()
		{
			this._ResourceOptionAttributes = new EntitySet<ResourceOptionAttribute>(new Action<ResourceOptionAttribute>(this.attach_ResourceOptionAttributes), new Action<ResourceOptionAttribute>(this.detach_ResourceOptionAttributes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedId", DbType="Int")]
		public System.Nullable<int> UserUpdatedId
		{
			get
			{
				return this._UserUpdatedId;
			}
			set
			{
				if ((this._UserUpdatedId != value))
				{
					this.OnUserUpdatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserUpdatedId = value;
					this.SendPropertyChanged("UserUpdatedId");
					this.OnUserUpdatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CostUncertainty_ResourceOptionAttribute", Storage="_ResourceOptionAttributes", ThisKey="Id", OtherKey="CostUncertainityId")]
		public EntitySet<ResourceOptionAttribute> ResourceOptionAttributes
		{
			get
			{
				return this._ResourceOptionAttributes;
			}
			set
			{
				this._ResourceOptionAttributes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResourceOptionAttributes(ResourceOptionAttribute entity)
		{
			this.SendPropertyChanging();
			entity.CostUncertainty = this;
		}
		
		private void detach_ResourceOptionAttributes(ResourceOptionAttribute entity)
		{
			this.SendPropertyChanging();
			entity.CostUncertainty = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="lookup.ResourceTypeUncertainties")]
	public partial class ResourceTypeUncertainty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Code;
		
		private string _Description;
		
		private System.DateTime _DateCreated;
		
		private int _UserCreatedId;
		
		private System.Nullable<System.DateTime> _DateUpdated;
		
		private System.Nullable<int> _UserUpdatedId;
		
		private EntitySet<ResourceOptionAttribute> _ResourceOptionAttributes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnDateCreatedChanging(System.DateTime value);
    partial void OnDateCreatedChanged();
    partial void OnUserCreatedIdChanging(int value);
    partial void OnUserCreatedIdChanged();
    partial void OnDateUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdatedChanged();
    partial void OnUserUpdatedIdChanging(System.Nullable<int> value);
    partial void OnUserUpdatedIdChanged();
    #endregion
		
		public ResourceTypeUncertainty()
		{
			this._ResourceOptionAttributes = new EntitySet<ResourceOptionAttribute>(new Action<ResourceOptionAttribute>(this.attach_ResourceOptionAttributes), new Action<ResourceOptionAttribute>(this.detach_ResourceOptionAttributes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateCreated", DbType="DateTime NOT NULL")]
		public System.DateTime DateCreated
		{
			get
			{
				return this._DateCreated;
			}
			set
			{
				if ((this._DateCreated != value))
				{
					this.OnDateCreatedChanging(value);
					this.SendPropertyChanging();
					this._DateCreated = value;
					this.SendPropertyChanged("DateCreated");
					this.OnDateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCreatedId", DbType="Int NOT NULL")]
		public int UserCreatedId
		{
			get
			{
				return this._UserCreatedId;
			}
			set
			{
				if ((this._UserCreatedId != value))
				{
					this.OnUserCreatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserCreatedId = value;
					this.SendPropertyChanged("UserCreatedId");
					this.OnUserCreatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdated
		{
			get
			{
				return this._DateUpdated;
			}
			set
			{
				if ((this._DateUpdated != value))
				{
					this.OnDateUpdatedChanging(value);
					this.SendPropertyChanging();
					this._DateUpdated = value;
					this.SendPropertyChanged("DateUpdated");
					this.OnDateUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdatedId", DbType="Int")]
		public System.Nullable<int> UserUpdatedId
		{
			get
			{
				return this._UserUpdatedId;
			}
			set
			{
				if ((this._UserUpdatedId != value))
				{
					this.OnUserUpdatedIdChanging(value);
					this.SendPropertyChanging();
					this._UserUpdatedId = value;
					this.SendPropertyChanged("UserUpdatedId");
					this.OnUserUpdatedIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ResourceTypeUncertainty_ResourceOptionAttribute", Storage="_ResourceOptionAttributes", ThisKey="Id", OtherKey="ResourceTypeUncertaintyId")]
		public EntitySet<ResourceOptionAttribute> ResourceOptionAttributes
		{
			get
			{
				return this._ResourceOptionAttributes;
			}
			set
			{
				this._ResourceOptionAttributes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ResourceOptionAttributes(ResourceOptionAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ResourceTypeUncertainty = this;
		}
		
		private void detach_ResourceOptionAttributes(ResourceOptionAttribute entity)
		{
			this.SendPropertyChanging();
			entity.ResourceTypeUncertainty = null;
		}
	}
}
#pragma warning restore 1591
